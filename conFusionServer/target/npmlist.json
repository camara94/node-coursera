{
  "name": "confusionserver",
  "version": "0.0.0",
  "problems": [
    "peer dep missing: mongoose@~> 4.x, required by mongoose-currency@0.2.0"
  ],
  "dependencies": {
    "certbot": {
      "version": "1.0.0",
      "from": "certbot",
      "resolved": "https://registry.npmjs.org/certbot/-/certbot-1.0.0.tgz"
    },
    "cookie-parser": {
      "version": "1.4.4",
      "from": "cookie-parser@~1.4.3",
      "resolved": "https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.4.tgz",
      "dependencies": {
        "cookie": {
          "version": "0.3.1",
          "from": "cookie@0.3.1",
          "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz"
        },
        "cookie-signature": {
          "version": "1.0.6",
          "from": "cookie-signature@1.0.6",
          "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz"
        }
      }
    },
    "debug": {
      "version": "2.6.9",
      "from": "debug@~2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "dependencies": {
        "ms": {
          "version": "2.0.0",
          "from": "ms@2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz"
        }
      }
    },
    "express": {
      "version": "4.16.4",
      "from": "express@~4.16.0",
      "resolved": "https://registry.npmjs.org/express/-/express-4.16.4.tgz",
      "dependencies": {
        "accepts": {
          "version": "1.3.5",
          "from": "accepts@~1.3.5",
          "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.5.tgz",
          "dependencies": {
            "mime-types": {
              "version": "2.1.22",
              "from": "mime-types@~2.1.18",
              "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.22.tgz",
              "dependencies": {
                "mime-db": {
                  "version": "1.38.0",
                  "from": "mime-db@~1.38.0",
                  "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.38.0.tgz"
                }
              }
            },
            "negotiator": {
              "version": "0.6.1",
              "from": "negotiator@0.6.1",
              "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.1.tgz"
            }
          }
        },
        "array-flatten": {
          "version": "1.1.1",
          "from": "array-flatten@1.1.1",
          "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz"
        },
        "body-parser": {
          "version": "1.18.3",
          "from": "body-parser@1.18.3",
          "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz",
          "dependencies": {
            "bytes": {
              "version": "3.0.0",
              "from": "bytes@3.0.0",
              "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz"
            },
            "content-type": {
              "version": "1.0.4",
              "from": "content-type@~1.0.4",
              "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz"
            },
            "debug": {
              "version": "2.6.9",
              "from": "debug@~2.6.9",
              "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz"
            },
            "depd": {
              "version": "1.1.2",
              "from": "depd@~1.1.2",
              "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz"
            },
            "http-errors": {
              "version": "1.6.3",
              "from": "http-errors@~1.6.2",
              "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz"
            },
            "iconv-lite": {
              "version": "0.4.23",
              "from": "iconv-lite@0.4.23",
              "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz",
              "dependencies": {
                "safer-buffer": {
                  "version": "2.1.2",
                  "from": "safer-buffer@>= 2.1.2 < 3",
                  "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz"
                }
              }
            },
            "on-finished": {
              "version": "2.3.0",
              "from": "on-finished@~2.3.0",
              "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz"
            },
            "qs": {
              "version": "6.5.2",
              "from": "qs@6.5.2",
              "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz"
            },
            "raw-body": {
              "version": "2.3.3",
              "from": "raw-body@2.3.3",
              "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz",
              "dependencies": {
                "bytes": {
                  "version": "3.0.0",
                  "from": "bytes@3.0.0",
                  "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz"
                },
                "http-errors": {
                  "version": "1.6.3",
                  "from": "http-errors@~1.6.2",
                  "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz"
                },
                "iconv-lite": {
                  "version": "0.4.23",
                  "from": "iconv-lite@0.4.23",
                  "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz"
                },
                "unpipe": {
                  "version": "1.0.0",
                  "from": "unpipe@1.0.0",
                  "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz"
                }
              }
            },
            "type-is": {
              "version": "1.6.16",
              "from": "type-is@~1.6.16",
              "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.16.tgz"
            }
          }
        },
        "content-disposition": {
          "version": "0.5.2",
          "from": "content-disposition@0.5.2",
          "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz"
        },
        "content-type": {
          "version": "1.0.4",
          "from": "content-type@~1.0.4",
          "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz"
        },
        "cookie": {
          "version": "0.3.1",
          "from": "cookie@0.3.1",
          "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz"
        },
        "cookie-signature": {
          "version": "1.0.6",
          "from": "cookie-signature@1.0.6",
          "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz"
        },
        "debug": {
          "version": "2.6.9",
          "from": "debug@~2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz"
        },
        "depd": {
          "version": "1.1.2",
          "from": "depd@~1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz"
        },
        "encodeurl": {
          "version": "1.0.2",
          "from": "encodeurl@~1.0.2",
          "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz"
        },
        "escape-html": {
          "version": "1.0.3",
          "from": "escape-html@~1.0.3",
          "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz"
        },
        "etag": {
          "version": "1.8.1",
          "from": "etag@~1.8.1",
          "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz"
        },
        "finalhandler": {
          "version": "1.1.1",
          "from": "finalhandler@1.1.1",
          "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.1.tgz",
          "dependencies": {
            "debug": {
              "version": "2.6.9",
              "from": "debug@~2.6.9",
              "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz"
            },
            "encodeurl": {
              "version": "1.0.2",
              "from": "encodeurl@~1.0.2",
              "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz"
            },
            "escape-html": {
              "version": "1.0.3",
              "from": "escape-html@~1.0.3",
              "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz"
            },
            "on-finished": {
              "version": "2.3.0",
              "from": "on-finished@~2.3.0",
              "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz"
            },
            "parseurl": {
              "version": "1.3.2",
              "from": "parseurl@~1.3.2",
              "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.2.tgz"
            },
            "statuses": {
              "version": "1.4.0",
              "from": "statuses@~1.4.0",
              "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz"
            },
            "unpipe": {
              "version": "1.0.0",
              "from": "unpipe@1.0.0",
              "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz"
            }
          }
        },
        "fresh": {
          "version": "0.5.2",
          "from": "fresh@0.5.2",
          "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz"
        },
        "merge-descriptors": {
          "version": "1.0.1",
          "from": "merge-descriptors@1.0.1",
          "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz"
        },
        "methods": {
          "version": "1.1.2",
          "from": "methods@~1.1.2",
          "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz"
        },
        "on-finished": {
          "version": "2.3.0",
          "from": "on-finished@~2.3.0",
          "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
          "dependencies": {
            "ee-first": {
              "version": "1.1.1",
              "from": "ee-first@1.1.1",
              "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz"
            }
          }
        },
        "parseurl": {
          "version": "1.3.2",
          "from": "parseurl@~1.3.2",
          "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.2.tgz"
        },
        "path-to-regexp": {
          "version": "0.1.7",
          "from": "path-to-regexp@0.1.7",
          "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz"
        },
        "proxy-addr": {
          "version": "2.0.4",
          "from": "proxy-addr@~2.0.4",
          "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.4.tgz",
          "dependencies": {
            "forwarded": {
              "version": "0.1.2",
              "from": "forwarded@~0.1.2",
              "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz"
            },
            "ipaddr.js": {
              "version": "1.8.0",
              "from": "ipaddr.js@1.8.0",
              "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.8.0.tgz"
            }
          }
        },
        "qs": {
          "version": "6.5.2",
          "from": "qs@6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz"
        },
        "range-parser": {
          "version": "1.2.0",
          "from": "range-parser@~1.2.0",
          "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.0.tgz"
        },
        "safe-buffer": {
          "version": "5.1.2",
          "from": "safe-buffer@5.1.2",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz"
        },
        "send": {
          "version": "0.16.2",
          "from": "send@0.16.2",
          "resolved": "https://registry.npmjs.org/send/-/send-0.16.2.tgz",
          "dependencies": {
            "debug": {
              "version": "2.6.9",
              "from": "debug@~2.6.9",
              "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz"
            },
            "depd": {
              "version": "1.1.2",
              "from": "depd@~1.1.2",
              "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz"
            },
            "destroy": {
              "version": "1.0.4",
              "from": "destroy@~1.0.4",
              "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz"
            },
            "encodeurl": {
              "version": "1.0.2",
              "from": "encodeurl@~1.0.2",
              "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz"
            },
            "escape-html": {
              "version": "1.0.3",
              "from": "escape-html@~1.0.3",
              "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz"
            },
            "etag": {
              "version": "1.8.1",
              "from": "etag@~1.8.1",
              "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz"
            },
            "fresh": {
              "version": "0.5.2",
              "from": "fresh@0.5.2",
              "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz"
            },
            "http-errors": {
              "version": "1.6.3",
              "from": "http-errors@~1.6.2",
              "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz"
            },
            "mime": {
              "version": "1.4.1",
              "from": "mime@1.4.1",
              "resolved": "https://registry.npmjs.org/mime/-/mime-1.4.1.tgz"
            },
            "ms": {
              "version": "2.0.0",
              "from": "ms@2.0.0",
              "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz"
            },
            "on-finished": {
              "version": "2.3.0",
              "from": "on-finished@~2.3.0",
              "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz"
            },
            "range-parser": {
              "version": "1.2.0",
              "from": "range-parser@~1.2.0",
              "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.0.tgz"
            },
            "statuses": {
              "version": "1.4.0",
              "from": "statuses@~1.4.0",
              "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz"
            }
          }
        },
        "serve-static": {
          "version": "1.13.2",
          "from": "serve-static@1.13.2",
          "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz",
          "dependencies": {
            "encodeurl": {
              "version": "1.0.2",
              "from": "encodeurl@~1.0.2",
              "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz"
            },
            "escape-html": {
              "version": "1.0.3",
              "from": "escape-html@~1.0.3",
              "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz"
            },
            "parseurl": {
              "version": "1.3.2",
              "from": "parseurl@~1.3.2",
              "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.2.tgz"
            },
            "send": {
              "version": "0.16.2",
              "from": "send@0.16.2",
              "resolved": "https://registry.npmjs.org/send/-/send-0.16.2.tgz"
            }
          }
        },
        "setprototypeof": {
          "version": "1.1.0",
          "from": "setprototypeof@1.1.0",
          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz"
        },
        "statuses": {
          "version": "1.4.0",
          "from": "statuses@~1.4.0",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz"
        },
        "type-is": {
          "version": "1.6.16",
          "from": "type-is@~1.6.16",
          "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.16.tgz",
          "dependencies": {
            "media-typer": {
              "version": "0.3.0",
              "from": "media-typer@0.3.0",
              "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz"
            },
            "mime-types": {
              "version": "2.1.22",
              "from": "mime-types@~2.1.18",
              "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.22.tgz"
            }
          }
        },
        "utils-merge": {
          "version": "1.0.1",
          "from": "utils-merge@1.0.1",
          "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz"
        },
        "vary": {
          "version": "1.1.2",
          "from": "vary@~1.1.2",
          "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz"
        }
      }
    },
    "express-session": {
      "version": "1.15.6",
      "from": "express-session",
      "resolved": "https://registry.npmjs.org/express-session/-/express-session-1.15.6.tgz",
      "dependencies": {
        "cookie": {
          "version": "0.3.1",
          "from": "cookie@0.3.1",
          "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz"
        },
        "cookie-signature": {
          "version": "1.0.6",
          "from": "cookie-signature@1.0.6",
          "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz"
        },
        "crc": {
          "version": "3.4.4",
          "from": "crc@3.4.4",
          "resolved": "https://registry.npmjs.org/crc/-/crc-3.4.4.tgz"
        },
        "debug": {
          "version": "2.6.9",
          "from": "debug@~2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz"
        },
        "depd": {
          "version": "1.1.2",
          "from": "depd@~1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz"
        },
        "on-headers": {
          "version": "1.0.2",
          "from": "on-headers@~1.0.1",
          "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz"
        },
        "parseurl": {
          "version": "1.3.2",
          "from": "parseurl@~1.3.2",
          "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.2.tgz"
        },
        "uid-safe": {
          "version": "2.1.5",
          "from": "uid-safe@~2.1.5",
          "resolved": "https://registry.npmjs.org/uid-safe/-/uid-safe-2.1.5.tgz",
          "dependencies": {
            "random-bytes": {
              "version": "1.0.0",
              "from": "random-bytes@~1.0.0",
              "resolved": "https://registry.npmjs.org/random-bytes/-/random-bytes-1.0.0.tgz"
            }
          }
        },
        "utils-merge": {
          "version": "1.0.1",
          "from": "utils-merge@1.0.1",
          "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz"
        }
      }
    },
    "helmet": {
      "version": "3.16.0",
      "from": "helmet",
      "resolved": "https://registry.npmjs.org/helmet/-/helmet-3.16.0.tgz",
      "dependencies": {
        "dns-prefetch-control": {
          "version": "0.1.0",
          "from": "dns-prefetch-control@0.1.0",
          "resolved": "https://registry.npmjs.org/dns-prefetch-control/-/dns-prefetch-control-0.1.0.tgz"
        },
        "dont-sniff-mimetype": {
          "version": "1.0.0",
          "from": "dont-sniff-mimetype@1.0.0",
          "resolved": "https://registry.npmjs.org/dont-sniff-mimetype/-/dont-sniff-mimetype-1.0.0.tgz"
        },
        "expect-ct": {
          "version": "0.1.1",
          "from": "expect-ct@0.1.1",
          "resolved": "https://registry.npmjs.org/expect-ct/-/expect-ct-0.1.1.tgz"
        },
        "feature-policy": {
          "version": "0.2.0",
          "from": "feature-policy@0.2.0",
          "resolved": "https://registry.npmjs.org/feature-policy/-/feature-policy-0.2.0.tgz"
        },
        "frameguard": {
          "version": "3.0.0",
          "from": "frameguard@3.0.0",
          "resolved": "https://registry.npmjs.org/frameguard/-/frameguard-3.0.0.tgz"
        },
        "helmet-crossdomain": {
          "version": "0.3.0",
          "from": "helmet-crossdomain@0.3.0",
          "resolved": "https://registry.npmjs.org/helmet-crossdomain/-/helmet-crossdomain-0.3.0.tgz"
        },
        "helmet-csp": {
          "version": "2.7.1",
          "from": "helmet-csp@2.7.1",
          "resolved": "https://registry.npmjs.org/helmet-csp/-/helmet-csp-2.7.1.tgz",
          "dependencies": {
            "camelize": {
              "version": "1.0.0",
              "from": "camelize@1.0.0",
              "resolved": "https://registry.npmjs.org/camelize/-/camelize-1.0.0.tgz"
            },
            "content-security-policy-builder": {
              "version": "2.0.0",
              "from": "content-security-policy-builder@2.0.0",
              "resolved": "https://registry.npmjs.org/content-security-policy-builder/-/content-security-policy-builder-2.0.0.tgz"
            },
            "dasherize": {
              "version": "2.0.0",
              "from": "dasherize@2.0.0",
              "resolved": "https://registry.npmjs.org/dasherize/-/dasherize-2.0.0.tgz"
            },
            "platform": {
              "version": "1.3.5",
              "from": "platform@1.3.5",
              "resolved": "https://registry.npmjs.org/platform/-/platform-1.3.5.tgz"
            }
          }
        },
        "depd": {
          "version": "2.0.0",
          "from": "depd@2.0.0",
          "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz"
        },
        "hide-powered-by": {
          "version": "1.0.0",
          "from": "hide-powered-by@1.0.0",
          "resolved": "https://registry.npmjs.org/hide-powered-by/-/hide-powered-by-1.0.0.tgz"
        },
        "hpkp": {
          "version": "2.0.0",
          "from": "hpkp@2.0.0",
          "resolved": "https://registry.npmjs.org/hpkp/-/hpkp-2.0.0.tgz"
        },
        "hsts": {
          "version": "2.2.0",
          "from": "hsts@2.2.0",
          "resolved": "https://registry.npmjs.org/hsts/-/hsts-2.2.0.tgz",
          "dependencies": {
            "depd": {
              "version": "2.0.0",
              "from": "depd@2.0.0",
              "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz"
            }
          }
        },
        "ienoopen": {
          "version": "1.1.0",
          "from": "ienoopen@1.1.0",
          "resolved": "https://registry.npmjs.org/ienoopen/-/ienoopen-1.1.0.tgz"
        },
        "nocache": {
          "version": "2.0.0",
          "from": "nocache@2.0.0",
          "resolved": "https://registry.npmjs.org/nocache/-/nocache-2.0.0.tgz"
        },
        "referrer-policy": {
          "version": "1.1.0",
          "from": "referrer-policy@1.1.0",
          "resolved": "https://registry.npmjs.org/referrer-policy/-/referrer-policy-1.1.0.tgz"
        },
        "x-xss-protection": {
          "version": "1.1.0",
          "from": "x-xss-protection@1.1.0",
          "resolved": "https://registry.npmjs.org/x-xss-protection/-/x-xss-protection-1.1.0.tgz"
        }
      }
    },
    "http-errors": {
      "version": "1.6.3",
      "from": "http-errors@~1.6.2",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
      "dependencies": {
        "depd": {
          "version": "1.1.2",
          "from": "depd@~1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz"
        },
        "inherits": {
          "version": "2.0.3",
          "from": "inherits@2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz"
        },
        "setprototypeof": {
          "version": "1.1.0",
          "from": "setprototypeof@1.1.0",
          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz"
        },
        "statuses": {
          "version": "1.4.0",
          "from": "statuses@~1.4.0",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz"
        }
      }
    },
    "jade": {
      "version": "1.11.0",
      "from": "jade@~1.11.0",
      "resolved": "https://registry.npmjs.org/jade/-/jade-1.11.0.tgz",
      "dependencies": {
        "character-parser": {
          "version": "1.2.1",
          "from": "character-parser@1.2.1",
          "resolved": "https://registry.npmjs.org/character-parser/-/character-parser-1.2.1.tgz"
        },
        "clean-css": {
          "version": "3.4.28",
          "from": "clean-css@^3.1.9",
          "resolved": "https://registry.npmjs.org/clean-css/-/clean-css-3.4.28.tgz",
          "dependencies": {
            "commander": {
              "version": "2.8.1",
              "from": "commander@2.8.x",
              "resolved": "https://registry.npmjs.org/commander/-/commander-2.8.1.tgz",
              "dependencies": {
                "graceful-readlink": {
                  "version": "1.0.1",
                  "from": "graceful-readlink@>= 1.0.0",
                  "resolved": "https://registry.npmjs.org/graceful-readlink/-/graceful-readlink-1.0.1.tgz"
                }
              }
            },
            "source-map": {
              "version": "0.4.4",
              "from": "source-map@0.4.x",
              "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz",
              "dependencies": {
                "amdefine": {
                  "version": "1.0.1",
                  "from": "amdefine@>=0.0.4",
                  "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz"
                }
              }
            }
          }
        },
        "commander": {
          "version": "2.6.0",
          "from": "commander@~2.6.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.6.0.tgz"
        },
        "constantinople": {
          "version": "3.0.2",
          "from": "constantinople@~3.0.1",
          "resolved": "https://registry.npmjs.org/constantinople/-/constantinople-3.0.2.tgz",
          "dependencies": {
            "acorn": {
              "version": "2.7.0",
              "from": "acorn@^2.1.0",
              "resolved": "https://registry.npmjs.org/acorn/-/acorn-2.7.0.tgz"
            }
          }
        },
        "jstransformer": {
          "version": "0.0.2",
          "from": "jstransformer@0.0.2",
          "resolved": "https://registry.npmjs.org/jstransformer/-/jstransformer-0.0.2.tgz",
          "dependencies": {
            "is-promise": {
              "version": "2.1.0",
              "from": "is-promise@^2.0.0",
              "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz"
            },
            "promise": {
              "version": "6.1.0",
              "from": "promise@^6.0.1",
              "resolved": "https://registry.npmjs.org/promise/-/promise-6.1.0.tgz",
              "dependencies": {
                "asap": {
                  "version": "1.0.0",
                  "from": "asap@~1.0.0",
                  "resolved": "https://registry.npmjs.org/asap/-/asap-1.0.0.tgz"
                }
              }
            }
          }
        },
        "mkdirp": {
          "version": "0.5.1",
          "from": "mkdirp@~0.5.0",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
          "dependencies": {
            "minimist": {
              "version": "0.0.8",
              "from": "minimist@0.0.8",
              "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz"
            }
          }
        },
        "transformers": {
          "version": "2.1.0",
          "from": "transformers@2.1.0",
          "resolved": "https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz",
          "dependencies": {
            "css": {
              "version": "1.0.8",
              "from": "css@~1.0.8",
              "resolved": "https://registry.npmjs.org/css/-/css-1.0.8.tgz",
              "dependencies": {
                "css-parse": {
                  "version": "1.0.4",
                  "from": "css-parse@1.0.4",
                  "resolved": "https://registry.npmjs.org/css-parse/-/css-parse-1.0.4.tgz"
                },
                "css-stringify": {
                  "version": "1.0.5",
                  "from": "css-stringify@1.0.5",
                  "resolved": "https://registry.npmjs.org/css-stringify/-/css-stringify-1.0.5.tgz"
                }
              }
            },
            "promise": {
              "version": "2.0.0",
              "from": "promise@~2.0",
              "resolved": "https://registry.npmjs.org/promise/-/promise-2.0.0.tgz",
              "dependencies": {
                "is-promise": {
                  "version": "1.0.1",
                  "from": "is-promise@~1",
                  "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz"
                }
              }
            },
            "uglify-js": {
              "version": "2.2.5",
              "from": "uglify-js@~2.2.5",
              "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.2.5.tgz",
              "dependencies": {
                "optimist": {
                  "version": "0.3.7",
                  "from": "optimist@~0.3.5",
                  "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.3.7.tgz",
                  "dependencies": {
                    "wordwrap": {
                      "version": "0.0.3",
                      "from": "wordwrap@~0.0.2",
                      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz"
                    }
                  }
                },
                "source-map": {
                  "version": "0.1.43",
                  "from": "source-map@~0.1.7",
                  "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz",
                  "dependencies": {
                    "amdefine": {
                      "version": "1.0.1",
                      "from": "amdefine@>=0.0.4",
                      "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz"
                    }
                  }
                }
              }
            }
          }
        },
        "uglify-js": {
          "version": "2.8.29",
          "from": "uglify-js@^2.4.19",
          "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.29.tgz",
          "dependencies": {
            "source-map": {
              "version": "0.5.7",
              "from": "source-map@~0.5.1",
              "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz"
            },
            "uglify-to-browserify": {
              "version": "1.0.2",
              "from": "uglify-to-browserify@~1.0.0",
              "resolved": "https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz"
            },
            "yargs": {
              "version": "3.10.0",
              "from": "yargs@~3.10.0",
              "resolved": "https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz",
              "dependencies": {
                "camelcase": {
                  "version": "1.2.1",
                  "from": "camelcase@^1.0.2",
                  "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz"
                },
                "cliui": {
                  "version": "2.1.0",
                  "from": "cliui@^2.1.0",
                  "resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",
                  "dependencies": {
                    "center-align": {
                      "version": "0.1.3",
                      "from": "center-align@^0.1.1",
                      "resolved": "https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz",
                      "dependencies": {
                        "align-text": {
                          "version": "0.1.4",
                          "from": "align-text@^0.1.3",
                          "resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz",
                          "dependencies": {
                            "kind-of": {
                              "version": "3.2.2",
                              "from": "kind-of@^3.0.2",
                              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
                              "dependencies": {
                                "is-buffer": {
                                  "version": "1.1.6",
                                  "from": "is-buffer@^1.1.5",
                                  "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz"
                                }
                              }
                            },
                            "longest": {
                              "version": "1.0.1",
                              "from": "longest@^1.0.1",
                              "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz"
                            },
                            "repeat-string": {
                              "version": "1.6.1",
                              "from": "repeat-string@^1.5.2",
                              "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz"
                            }
                          }
                        },
                        "lazy-cache": {
                          "version": "1.0.4",
                          "from": "lazy-cache@^1.0.3",
                          "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz"
                        }
                      }
                    },
                    "wordwrap": {
                      "version": "0.0.2",
                      "from": "wordwrap@0.0.2",
                      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz"
                    },
                    "right-align": {
                      "version": "0.1.3",
                      "from": "right-align@^0.1.1",
                      "resolved": "https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz",
                      "dependencies": {
                        "align-text": {
                          "version": "0.1.4",
                          "from": "align-text@^0.1.3",
                          "resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz"
                        }
                      }
                    }
                  }
                },
                "decamelize": {
                  "version": "1.2.0",
                  "from": "decamelize@^1.0.0",
                  "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz"
                },
                "window-size": {
                  "version": "0.1.0",
                  "from": "window-size@0.1.0",
                  "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz"
                }
              }
            }
          }
        },
        "void-elements": {
          "version": "2.0.1",
          "from": "void-elements@~2.0.1",
          "resolved": "https://registry.npmjs.org/void-elements/-/void-elements-2.0.1.tgz"
        },
        "with": {
          "version": "4.0.3",
          "from": "with@~4.0.0",
          "resolved": "https://registry.npmjs.org/with/-/with-4.0.3.tgz",
          "dependencies": {
            "acorn-globals": {
              "version": "1.0.9",
              "from": "acorn-globals@^1.0.3",
              "resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-1.0.9.tgz",
              "dependencies": {
                "acorn": {
                  "version": "2.7.0",
                  "from": "acorn@^2.1.0",
                  "resolved": "https://registry.npmjs.org/acorn/-/acorn-2.7.0.tgz"
                }
              }
            },
            "acorn": {
              "version": "1.2.2",
              "from": "acorn@^1.0.1",
              "resolved": "https://registry.npmjs.org/acorn/-/acorn-1.2.2.tgz"
            }
          }
        }
      }
    },
    "jsonwebtoken": {
      "version": "8.3.0",
      "from": "jsonwebtoken@8.3.0",
      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-8.3.0.tgz",
      "dependencies": {
        "ms": {
          "version": "2.1.1",
          "from": "ms@^2.1.1",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz"
        },
        "jws": {
          "version": "3.2.2",
          "from": "jws@^3.1.5",
          "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
          "dependencies": {
            "jwa": {
              "version": "1.4.1",
              "from": "jwa@^1.4.1",
              "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz",
              "dependencies": {
                "buffer-equal-constant-time": {
                  "version": "1.0.1",
                  "from": "buffer-equal-constant-time@1.0.1",
                  "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz"
                },
                "ecdsa-sig-formatter": {
                  "version": "1.0.11",
                  "from": "ecdsa-sig-formatter@1.0.11",
                  "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
                  "dependencies": {
                    "safe-buffer": {
                      "version": "5.1.2",
                      "from": "safe-buffer@5.1.2",
                      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz"
                    }
                  }
                },
                "safe-buffer": {
                  "version": "5.1.2",
                  "from": "safe-buffer@5.1.2",
                  "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz"
                }
              }
            },
            "safe-buffer": {
              "version": "5.1.2",
              "from": "safe-buffer@5.1.2",
              "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz"
            }
          }
        },
        "lodash.includes": {
          "version": "4.3.0",
          "from": "lodash.includes@^4.3.0",
          "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz"
        },
        "lodash.isboolean": {
          "version": "3.0.3",
          "from": "lodash.isboolean@^3.0.3",
          "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz"
        },
        "lodash.isinteger": {
          "version": "4.0.4",
          "from": "lodash.isinteger@^4.0.4",
          "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz"
        },
        "lodash.isnumber": {
          "version": "3.0.3",
          "from": "lodash.isnumber@^3.0.3",
          "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz"
        },
        "lodash.isplainobject": {
          "version": "4.0.6",
          "from": "lodash.isplainobject@^4.0.6",
          "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz"
        },
        "lodash.isstring": {
          "version": "4.0.1",
          "from": "lodash.isstring@^4.0.1",
          "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz"
        },
        "lodash.once": {
          "version": "4.1.1",
          "from": "lodash.once@^4.0.0",
          "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz"
        }
      }
    },
    "mongoose": {
      "required": {
        "_from": "mongoose@5.1.7",
        "_id": "mongoose@5.1.7",
        "_integrity": "sha512-9zus8yEovPqLo3S2iXz2Dg9YJAo8xG7m161abqJbUNIqZYjvpPwjmWAs6ChZnxEUpTYFOve//ljvyA5V5D9sNw==",
        "_location": "/mongoose",
        "_phantomChildren": {},
        "_requested": {
          "type": "version",
          "registry": true,
          "raw": "mongoose@5.1.7",
          "name": "mongoose",
          "escapedName": "mongoose",
          "rawSpec": "5.1.7",
          "saveSpec": null,
          "fetchSpec": "5.1.7"
        },
        "_requiredBy": [
          "#USER",
          "/"
        ],
        "_resolved": "https://registry.npmjs.org/mongoose/-/mongoose-5.1.7.tgz",
        "_shasum": "b13463278cc455b3e19031b96cde9c2010095f6c",
        "_spec": "5.1.7",
        "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
        "author": {
          "name": "Guillermo Rauch",
          "email": "guillermo@learnboost.com"
        },
        "browser": "./browser.js",
        "bugs": {
          "url": "https://github.com/Automattic/mongoose/issues/new"
        },
        "bundleDependencies": false,
        "dependencies": {
          "async": {
            "_from": "async@2.6.1",
            "_id": "async@2.6.1",
            "_integrity": "sha512-fNEiL2+AZt6AlAw/29Cr0UDe4sRAHCpEHh54WMz+Bb7QfNcFw4h3loofyJpLeQs4Yx7yuqu/2dLgM5hKOs6HlQ==",
            "_location": "/async",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "async@2.6.1",
              "name": "async",
              "escapedName": "async",
              "rawSpec": "2.6.1",
              "saveSpec": "[Circular]",
              "fetchSpec": "2.6.1"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/async/-/async-2.6.1.tgz",
            "_shasum": "b245a23ca71930044ec53fa46aa00a3e87c6a610",
            "_spec": "2.6.1",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Caolan McMahon"
            },
            "bugs": {
              "url": "https://github.com/caolan/async/issues"
            },
            "bundleDependencies": false,
            "dependencies": {
              "lodash": {
                "_from": "lodash@^4.17.10",
                "_id": "lodash@4.17.11",
                "_integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg==",
                "_location": "/lodash",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "lodash@4.17.11",
                  "name": "lodash",
                  "escapedName": "lodash",
                  "rawSpec": "4.17.11",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "4.17.11"
                },
                "_requiredBy": [
                  "/async"
                ],
                "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",
                "_shasum": "b39ea6229ef607ecd89e2c8df12536891cac9b8d",
                "_spec": "4.17.11",
                "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                "author": {
                  "name": "John-David Dalton",
                  "email": "john.david.dalton@gmail.com",
                  "url": "http://allyoucanleet.com/"
                },
                "bugs": {
                  "url": "https://github.com/lodash/lodash/issues"
                },
                "bundleDependencies": false,
                "contributors": [
                  {
                    "name": "John-David Dalton",
                    "email": "john.david.dalton@gmail.com",
                    "url": "http://allyoucanleet.com/"
                  },
                  {
                    "name": "Mathias Bynens",
                    "email": "mathias@qiwi.be",
                    "url": "https://mathiasbynens.be/"
                  }
                ],
                "deprecated": false,
                "description": "Lodash modular utilities.",
                "homepage": "https://lodash.com/",
                "icon": "https://lodash.com/icon.svg",
                "keywords": [
                  "modules",
                  "stdlib",
                  "util"
                ],
                "license": "MIT",
                "main": "lodash.js",
                "name": "lodash",
                "repository": {
                  "type": "git",
                  "url": "git+https://github.com/lodash/lodash.git"
                },
                "scripts": {
                  "test": "echo \"See https://travis-ci.org/lodash-archive/lodash-cli for testing details.\""
                },
                "version": "4.17.11",
                "readme": "# lodash v4.17.11\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.11-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 68-69, Firefox 61-62, IE 11, Edge 17, Safari 10-11, Node.js 6-10, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
                "readmeFilename": "README.md",
                "_args": [
                  [
                    "lodash@4.17.11",
                    "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                  ]
                ],
                "dependencies": {},
                "devDependencies": {},
                "optionalDependencies": {},
                "_dependencies": {},
                "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\lodash",
                "error": "[Circular]",
                "extraneous": false
              }
            },
            "deprecated": false,
            "description": "Higher-order functions and common patterns for asynchronous code",
            "devDependencies": {
              "babel-cli": "^6.24.0",
              "babel-core": "^6.26.3",
              "babel-plugin-add-module-exports": "^0.2.1",
              "babel-plugin-istanbul": "^2.0.1",
              "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
              "babel-preset-es2015": "^6.3.13",
              "babel-preset-es2017": "^6.22.0",
              "babelify": "^8.0.0",
              "benchmark": "^2.1.1",
              "bluebird": "^3.4.6",
              "browserify": "^16.2.2",
              "chai": "^4.1.2",
              "cheerio": "^0.22.0",
              "coveralls": "^3.0.1",
              "es6-promise": "^2.3.0",
              "eslint": "^2.13.1",
              "fs-extra": "^0.26.7",
              "gh-pages-deploy": "^0.5.0",
              "jsdoc": "^3.4.0",
              "karma": "^2.0.2",
              "karma-browserify": "^5.2.0",
              "karma-firefox-launcher": "^1.1.0",
              "karma-mocha": "^1.2.0",
              "karma-mocha-reporter": "^2.2.0",
              "mocha": "^5.2.0",
              "native-promise-only": "^0.8.0-a",
              "nyc": "^11.8.0",
              "rimraf": "^2.5.0",
              "rollup": "^0.36.3",
              "rollup-plugin-node-resolve": "^2.0.0",
              "rollup-plugin-npm": "^2.0.0",
              "rsvp": "^3.0.18",
              "semver": "^5.5.0",
              "uglify-js": "~2.7.3",
              "yargs": "^11.0.0"
            },
            "gh-pages-deploy": {
              "staticpath": "docs"
            },
            "homepage": "https://caolan.github.io/async/",
            "keywords": [
              "async",
              "callback",
              "module",
              "utility"
            ],
            "license": "MIT",
            "main": "dist/async.js",
            "name": "async",
            "nyc": {
              "exclude": [
                "mocha_test"
              ]
            },
            "repository": {
              "type": "git",
              "url": "git+https://github.com/caolan/async.git"
            },
            "scripts": {
              "coverage": "nyc npm run mocha-node-test -- --grep @nycinvalid --invert",
              "coveralls": "npm run coverage && nyc report --reporter=text-lcov | coveralls",
              "jsdoc": "jsdoc -c ./support/jsdoc/jsdoc.json && node support/jsdoc/jsdoc-fix-html.js",
              "lint": "eslint lib/ mocha_test/ perf/memory.js perf/suites.js perf/benchmark.js support/build/ support/*.js karma.conf.js",
              "mocha-browser-test": "karma start",
              "mocha-node-test": "mocha mocha_test/ --compilers js:babel-core/register",
              "mocha-test": "npm run mocha-node-test && npm run mocha-browser-test",
              "test": "npm run lint && npm run mocha-node-test"
            },
            "version": "2.6.1",
            "readme": "![Async Logo](https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg)\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![NPM version](https://img.shields.io/npm/v/async.svg)](https://www.npmjs.com/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![libhive - Open source examples](https://www.libhive.com/providers/npm/packages/async/examples/badge.svg)](https://www.libhive.com/providers/npm/packages/async)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded)](https://www.jsdelivr.com/package/npm/async)\n\n\nAsync is a utility module which provides straight-forward, powerful functions for working with [asynchronous JavaScript](http://caolan.github.io/async/global.html). Although originally designed for use with [Node.js](https://nodejs.org/) and installable via `npm install --save async`, it can also be used directly in the browser.\n\nThis version of the package is optimized for the Node.js environment. If you use Async with webpack, install [`async-es`](https://www.npmjs.com/package/async-es) instead.\n\nFor Documentation, visit <https://caolan.github.io/async/>\n\n*For Async v1.5.x documentation, go [HERE](https://github.com/caolan/async/blob/v1.5.2/README.md)*\n\n\n```javascript\n// for use with Node-style callbacks...\nvar async = require(\"async\");\n\nvar obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    // configs is now a map of JSON data\n    doSomethingWith(configs);\n});\n```\n\n```javascript\nvar async = require(\"async\");\n\n// ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    // results is now an array of the response bodies\n    console.log(results)\n})\n```\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "async@2.6.1",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "optionalDependencies": {},
            "_dependencies": {
              "lodash": "^4.17.10"
            },
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\async",
            "error": "[Circular]",
            "extraneous": false
          },
          "bson": {
            "_from": "bson@~1.0.5",
            "_id": "bson@1.0.9",
            "_integrity": "sha512-IQX9/h7WdMBIW/q/++tGd+emQr0XMdeZ6icnT/74Xk9fnabWn+gZgpE+9V+gujL3hhJOoNrnDVY7tWdzc7NUTg==",
            "_location": "/bson",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "bson@1.0.9",
              "name": "bson",
              "escapedName": "bson",
              "rawSpec": "1.0.9",
              "saveSpec": "[Circular]",
              "fetchSpec": "1.0.9"
            },
            "_requiredBy": [
              "/mongodb-core",
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/bson/-/bson-1.0.9.tgz",
            "_shasum": "12319f8323b1254739b7c6bef8d3e89ae05a2f57",
            "_spec": "1.0.9",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Christian Amor Kvalheim",
              "email": "christkv@gmail.com"
            },
            "browser": "lib/bson/bson.js",
            "bugs": {
              "url": "https://github.com/mongodb/js-bson/issues"
            },
            "bundleDependencies": false,
            "config": {
              "native": false
            },
            "contributors": [],
            "deprecated": false,
            "description": "A bson parser for node.js and the browser",
            "devDependencies": {
              "babel-core": "^6.14.0",
              "babel-loader": "^6.2.5",
              "babel-polyfill": "^6.13.0",
              "babel-preset-es2015": "^6.14.0",
              "babel-preset-stage-0": "^6.5.0",
              "babel-register": "^6.14.0",
              "benchmark": "1.0.0",
              "colors": "1.1.0",
              "conventional-changelog-cli": "^1.3.5",
              "nodeunit": "0.9.0",
              "webpack": "^1.13.2",
              "webpack-polyfills-plugin": "0.0.9"
            },
            "directories": {
              "lib": "./lib/bson"
            },
            "engines": {
              "node": ">=0.6.19"
            },
            "files": [
              "lib",
              "index.js",
              "browser_build",
              "bower.json"
            ],
            "homepage": "https://github.com/mongodb/js-bson#readme",
            "keywords": [
              "mongodb",
              "bson",
              "parser"
            ],
            "license": "Apache-2.0",
            "main": "./index",
            "name": "bson",
            "repository": {
              "type": "git",
              "url": "git+https://github.com/mongodb/js-bson.git"
            },
            "scripts": {
              "build": "webpack --config ./webpack.dist.config.js",
              "changelog": "conventional-changelog -p angular -i HISTORY.md -s",
              "format": "prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'",
              "lint": "eslint lib test",
              "test": "nodeunit ./test/node"
            },
            "version": "1.0.9",
            "readme": "# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the following sources:\n  * [MongoDB BSON Type Reference](https://docs.mongodb.com/manual/reference/bson-types/)\n  * [BSON Spec](https://bsonspec.org/)\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized Javascript Object.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nvar bson = new BSON();\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(bson.deserialize(bson.serialize(obj)));\n```\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "bson@1.0.9",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "dependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\bson",
            "error": "[Circular]",
            "extraneous": false
          },
          "kareem": {
            "_from": "kareem@2.2.1",
            "_id": "kareem@2.2.1",
            "_integrity": "sha512-xpDFy8OxkFM+vK6pXy6JmH92ibeEFUuDWzas5M9L7MzVmHW3jzwAHxodCPV/BYkf4A31bVDLyonrMfp9RXb/oA==",
            "_location": "/kareem",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "kareem@2.2.1",
              "name": "kareem",
              "escapedName": "kareem",
              "rawSpec": "2.2.1",
              "saveSpec": "[Circular]",
              "fetchSpec": "2.2.1"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/kareem/-/kareem-2.2.1.tgz",
            "_shasum": "9950809415aa3cde62ab43b4f7b919d99816e015",
            "_spec": "2.2.1",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Valeri Karpov",
              "email": "val@karpov.io"
            },
            "bugs": {
              "url": "https://github.com/vkarpov15/kareem/issues"
            },
            "bundleDependencies": false,
            "deprecated": false,
            "description": "Next-generation take on pre/post function hooks",
            "devDependencies": {
              "acquit": "0.5.1",
              "gulp": "3.8.10",
              "gulp-jscs": "1.4.0",
              "gulp-mocha": "2.0.0",
              "istanbul": "0.4.5",
              "jscs": "1.9.0",
              "mocha": "3.2.0"
            },
            "homepage": "https://github.com/vkarpov15/kareem#readme",
            "jscsConfig": {
              "preset": "airbnb",
              "requireMultipleVarDecl": "[Circular]",
              "disallowMultipleVarDecl": true
            },
            "license": "Apache-2.0",
            "main": "index.js",
            "name": "kareem",
            "repository": {
              "type": "git",
              "url": "git://github.com/vkarpov15/kareem.git"
            },
            "scripts": {
              "test": "./node_modules/mocha/bin/mocha ./test/*",
              "test-travis": "./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- -R spec ./test/*"
            },
            "version": "2.2.1",
            "readme": "# kareem\n\n  [![Build Status](https://travis-ci.org/vkarpov15/kareem.svg?branch=master)](https://travis-ci.org/vkarpov15/kareem)\n  [![Coverage Status](https://img.shields.io/coveralls/vkarpov15/kareem.svg)](https://coveralls.io/r/vkarpov15/kareem)\n\nRe-imagined take on the [hooks](http://npmjs.org/package/hooks) module, meant to offer additional flexibility in allowing you to execute hooks whenever necessary, as opposed to simply wrapping a single function.\n\nNamed for the NBA's all-time leading scorer Kareem Abdul-Jabbar, known for his mastery of the [hook shot](http://en.wikipedia.org/wiki/Kareem_Abdul-Jabbar#Skyhook)\n\n<img src=\"http://upload.wikimedia.org/wikipedia/commons/0/00/Kareem-Abdul-Jabbar_Lipofsky.jpg\" width=\"220\">\n\n# API\n\n## pre hooks\n\nMuch like [hooks](https://npmjs.org/package/hooks), kareem lets you define\npre and post hooks: pre hooks are called before a given function executes.\nUnlike hooks, kareem stores hooks and other internal state in a separate\nobject, rather than relying on inheritance. Furthermore, kareem exposes\nan `execPre()` function that allows you to execute your pre hooks when\nappropriate, giving you more fine-grained control over your function hooks.\n\n\n#### It runs without any hooks specified\n\n```javascript\n    \n    hooks.execPre('cook', null, function() {\n      done();\n    });\n  \n```\n\n#### It runs basic serial pre hooks\n\npre hook functions take one parameter, a \"done\" function that you execute\nwhen your pre hook is finished.\n\n\n```javascript\n    \n    var count = 0;\n\n    hooks.pre('cook', function(done) {\n      ++count;\n      done();\n    });\n\n    hooks.execPre('cook', null, function() {\n      assert.equal(1, count);\n      done();\n    });\n  \n```\n\n#### It can run multipe pre hooks\n\n```javascript\n    \n    var count1 = 0;\n    var count2 = 0;\n\n    hooks.pre('cook', function(done) {\n      ++count1;\n      done();\n    });\n\n    hooks.pre('cook', function(done) {\n      ++count2;\n      done();\n    });\n\n    hooks.execPre('cook', null, function() {\n      assert.equal(1, count1);\n      assert.equal(1, count2);\n      done();\n    });\n  \n```\n\n#### It can run fully synchronous pre hooks\n\nIf your pre hook function takes no parameters, its assumed to be\nfully synchronous.\n\n\n```javascript\n    \n    var count1 = 0;\n    var count2 = 0;\n\n    hooks.pre('cook', function() {\n      ++count1;\n    });\n\n    hooks.pre('cook', function() {\n      ++count2;\n    });\n\n    hooks.execPre('cook', null, function(error) {\n      assert.equal(null, error);\n      assert.equal(1, count1);\n      assert.equal(1, count2);\n      done();\n    });\n  \n```\n\n#### It properly attaches context to pre hooks\n\nPre save hook functions are bound to the second parameter to `execPre()`\n\n\n```javascript\n    \n    hooks.pre('cook', function(done) {\n      this.bacon = 3;\n      done();\n    });\n\n    hooks.pre('cook', function(done) {\n      this.eggs = 4;\n      done();\n    });\n\n    var obj = { bacon: 0, eggs: 0 };\n\n    // In the pre hooks, `this` will refer to `obj`\n    hooks.execPre('cook', obj, function(error) {\n      assert.equal(null, error);\n      assert.equal(3, obj.bacon);\n      assert.equal(4, obj.eggs);\n      done();\n    });\n  \n```\n\n#### It can execute parallel (async) pre hooks\n\nLike the hooks module, you can declare \"async\" pre hooks - these take two\nparameters, the functions `next()` and `done()`. `next()` passes control to\nthe next pre hook, but the underlying function won't be called until all\nasync pre hooks have called `done()`.\n\n\n```javascript\n    \n    hooks.pre('cook', true, function(next, done) {\n      this.bacon = 3;\n      next();\n      setTimeout(function() {\n        done();\n      }, 5);\n    });\n\n    hooks.pre('cook', true, function(next, done) {\n      next();\n      var _this = this;\n      setTimeout(function() {\n        _this.eggs = 4;\n        done();\n      }, 10);\n    });\n\n    hooks.pre('cook', function(next) {\n      this.waffles = false;\n      next();\n    });\n\n    var obj = { bacon: 0, eggs: 0 };\n\n    hooks.execPre('cook', obj, function() {\n      assert.equal(3, obj.bacon);\n      assert.equal(4, obj.eggs);\n      assert.equal(false, obj.waffles);\n      done();\n    });\n  \n```\n\n#### It supports returning a promise\n\nYou can also return a promise from your pre hooks instead of calling\n`next()`. When the returned promise resolves, kareem will kick off the\nnext middleware.\n\n\n```javascript\n    \n    hooks.pre('cook', function() {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.bacon = 3;\n          resolve();\n        }, 100);\n      });\n    });\n\n    var obj = { bacon: 0 };\n\n    hooks.execPre('cook', obj, function() {\n      assert.equal(3, obj.bacon);\n      done();\n    });\n  \n```\n\n## post hooks\n\n#### It runs without any hooks specified\n\n```javascript\n    \n    hooks.execPost('cook', null, [1], function(error, eggs) {\n      assert.ifError(error);\n      assert.equal(1, eggs);\n      done();\n    });\n  \n```\n\n#### It executes with parameters passed in\n\n```javascript\n    \n    hooks.post('cook', function(eggs, bacon, callback) {\n      assert.equal(1, eggs);\n      assert.equal(2, bacon);\n      callback();\n    });\n\n    hooks.execPost('cook', null, [1, 2], function(error, eggs, bacon) {\n      assert.ifError(error);\n      assert.equal(1, eggs);\n      assert.equal(2, bacon);\n      done();\n    });\n  \n```\n\n#### It can use synchronous post hooks\n\n```javascript\n    \n    var execed = {};\n\n    hooks.post('cook', function(eggs, bacon) {\n      execed.first = true;\n      assert.equal(1, eggs);\n      assert.equal(2, bacon);\n    });\n\n    hooks.post('cook', function(eggs, bacon, callback) {\n      execed.second = true;\n      assert.equal(1, eggs);\n      assert.equal(2, bacon);\n      callback();\n    });\n\n    hooks.execPost('cook', null, [1, 2], function(error, eggs, bacon) {\n      assert.ifError(error);\n      assert.equal(2, Object.keys(execed).length);\n      assert.ok(execed.first);\n      assert.ok(execed.second);\n      assert.equal(1, eggs);\n      assert.equal(2, bacon);\n      done();\n    });\n  \n```\n\n## wrap()\n\n#### It wraps pre and post calls into one call\n\n```javascript\n    \n    hooks.pre('cook', true, function(next, done) {\n      this.bacon = 3;\n      next();\n      setTimeout(function() {\n        done();\n      }, 5);\n    });\n\n    hooks.pre('cook', true, function(next, done) {\n      next();\n      var _this = this;\n      setTimeout(function() {\n        _this.eggs = 4;\n        done();\n      }, 10);\n    });\n\n    hooks.pre('cook', function(next) {\n      this.waffles = false;\n      next();\n    });\n\n    hooks.post('cook', function(obj) {\n      obj.tofu = 'no';\n    });\n\n    var obj = { bacon: 0, eggs: 0 };\n\n    var args = [obj];\n    args.push(function(error, result) {\n      assert.ifError(error);\n      assert.equal(null, error);\n      assert.equal(3, obj.bacon);\n      assert.equal(4, obj.eggs);\n      assert.equal(false, obj.waffles);\n      assert.equal('no', obj.tofu);\n\n      assert.equal(obj, result);\n      done();\n    });\n\n    hooks.wrap(\n      'cook',\n      function(o, callback) {\n        assert.equal(3, obj.bacon);\n        assert.equal(4, obj.eggs);\n        assert.equal(false, obj.waffles);\n        assert.equal(undefined, obj.tofu);\n        callback(null, o);\n      },\n      obj,\n      args);\n  \n```\n\n## createWrapper()\n\n#### It wraps wrap() into a callable function\n\n```javascript\n    \n    hooks.pre('cook', true, function(next, done) {\n      this.bacon = 3;\n      next();\n      setTimeout(function() {\n        done();\n      }, 5);\n    });\n\n    hooks.pre('cook', true, function(next, done) {\n      next();\n      var _this = this;\n      setTimeout(function() {\n        _this.eggs = 4;\n        done();\n      }, 10);\n    });\n\n    hooks.pre('cook', function(next) {\n      this.waffles = false;\n      next();\n    });\n\n    hooks.post('cook', function(obj) {\n      obj.tofu = 'no';\n    });\n\n    var obj = { bacon: 0, eggs: 0 };\n\n    var cook = hooks.createWrapper(\n      'cook',\n      function(o, callback) {\n        assert.equal(3, obj.bacon);\n        assert.equal(4, obj.eggs);\n        assert.equal(false, obj.waffles);\n        assert.equal(undefined, obj.tofu);\n        callback(null, o);\n      },\n      obj);\n\n    cook(obj, function(error, result) {\n      assert.ifError(error);\n      assert.equal(3, obj.bacon);\n      assert.equal(4, obj.eggs);\n      assert.equal(false, obj.waffles);\n      assert.equal('no', obj.tofu);\n\n      assert.equal(obj, result);\n      done();\n    });\n  \n```\n\n## clone()\n\n#### It clones a Kareem object\n\n```javascript\n    \n    var k1 = new Kareem();\n    k1.pre('cook', function() {});\n    k1.post('cook', function() {});\n\n    var k2 = k1.clone();\n    assert.deepEqual(['cook'], Object.keys(k2._pres));\n    assert.deepEqual(['cook'], Object.keys(k2._posts));\n  \n```\n\n## merge()\n\n#### It pulls hooks from another Kareem object\n\n```javascript\n    \n    var k1 = new Kareem();\n    var test1 = function() {};\n    k1.pre('cook', test1);\n    k1.post('cook', function() {});\n\n    var k2 = new Kareem();\n    var test2 = function() {};\n    k2.pre('cook', test2);\n    var k3 = k2.merge(k1);\n    assert.equal(k3._pres['cook'].length, 2);\n    assert.equal(k3._pres['cook'][0].fn, test2);\n    assert.equal(k3._pres['cook'][1].fn, test1);\n    assert.equal(k3._posts['cook'].length, 1);\n  \n```\n\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "kareem@2.2.1",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "dependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\kareem",
            "error": "[Circular]",
            "extraneous": false
          },
          "lodash.get": {
            "_from": "lodash.get@4.4.2",
            "_id": "lodash.get@4.4.2",
            "_integrity": "sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk=",
            "_location": "/lodash.get",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "lodash.get@4.4.2",
              "name": "lodash.get",
              "escapedName": "lodash.get",
              "rawSpec": "4.4.2",
              "saveSpec": "[Circular]",
              "fetchSpec": "4.4.2"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
            "_shasum": "2d177f652fa31e939b4438d5341499dfa3825e99",
            "_spec": "4.4.2",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "John-David Dalton",
              "email": "john.david.dalton@gmail.com",
              "url": "http://allyoucanleet.com/"
            },
            "bugs": {
              "url": "https://github.com/lodash/lodash/issues"
            },
            "bundleDependencies": false,
            "contributors": [
              {
                "name": "John-David Dalton",
                "email": "john.david.dalton@gmail.com",
                "url": "http://allyoucanleet.com/"
              },
              {
                "name": "Blaine Bublitz",
                "email": "blaine.bublitz@gmail.com",
                "url": "https://github.com/phated"
              },
              {
                "name": "Mathias Bynens",
                "email": "mathias@qiwi.be",
                "url": "https://mathiasbynens.be/"
              }
            ],
            "deprecated": false,
            "description": "The lodash method `_.get` exported as a module.",
            "homepage": "https://lodash.com/",
            "icon": "https://lodash.com/icon.svg",
            "keywords": [
              "lodash-modularized",
              "get"
            ],
            "license": "MIT",
            "name": "lodash.get",
            "repository": {
              "type": "git",
              "url": "git+https://github.com/lodash/lodash.git"
            },
            "scripts": {
              "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
            },
            "version": "4.4.2",
            "readme": "# lodash.get v4.4.2\n\nThe [lodash](https://lodash.com/) method `_.get` exported as a [Node.js](https://nodejs.org/) module.\n\n## Installation\n\nUsing npm:\n```bash\n$ {sudo -H} npm i -g npm\n$ npm i --save lodash.get\n```\n\nIn Node.js:\n```js\nvar get = require('lodash.get');\n```\n\nSee the [documentation](https://lodash.com/docs#get) or [package source](https://github.com/lodash/lodash/blob/4.4.2-npm-packages/lodash.get) for more details.\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "lodash.get@4.4.2",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "dependencies": {},
            "devDependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\lodash.get",
            "error": "[Circular]",
            "extraneous": false
          },
          "mongodb": {
            "_from": "mongodb@3.0.10",
            "_id": "mongodb@3.0.10",
            "_integrity": "sha512-jy9s4FgcM4rl8sHNETYHGeWcuRh9AlwQCUuMiTj041t/HD02HwyFgmm2VZdd9/mA9YNHaUJLqj0tzBx2QFivtg==",
            "_location": "/mongodb",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "mongodb@3.0.10",
              "name": "mongodb",
              "escapedName": "mongodb",
              "rawSpec": "3.0.10",
              "saveSpec": "[Circular]",
              "fetchSpec": "3.0.10"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/mongodb/-/mongodb-3.0.10.tgz",
            "_shasum": "f948cb9595adcbfcad7444f6b24a040b653b23e8",
            "_spec": "3.0.10",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Christian Kvalheim"
            },
            "bugs": {
              "url": "https://github.com/mongodb/node-mongodb-native/issues"
            },
            "bundleDependencies": false,
            "dependencies": {
              "mongodb-core": {
                "_from": "mongodb-core@3.0.9",
                "_id": "mongodb-core@3.0.9",
                "_integrity": "sha512-buOWjdLLBlEqjHDeHYSXqXx173wHMVp7bafhdHxSjxWdB9V6Ri4myTqxjYZwL/eGFZxvd8oRQSuhwuIDbaaB+g==",
                "_location": "/mongodb-core",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "mongodb-core@3.0.9",
                  "name": "mongodb-core",
                  "escapedName": "mongodb-core",
                  "rawSpec": "3.0.9",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "3.0.9"
                },
                "_requiredBy": [
                  "/mongodb"
                ],
                "_resolved": "https://registry.npmjs.org/mongodb-core/-/mongodb-core-3.0.9.tgz",
                "_shasum": "8327410c88811013fb3e4ac7c4c670f324349be1",
                "_spec": "3.0.9",
                "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                "author": {
                  "name": "Christian Kvalheim"
                },
                "bugs": {
                  "url": "https://github.com/mongodb-js/mongodb-core/issues"
                },
                "bundleDependencies": false,
                "dependencies": {
                  "bson": {
                    "_from": "bson@~1.0.5",
                    "_id": "bson@1.0.9",
                    "_integrity": "sha512-IQX9/h7WdMBIW/q/++tGd+emQr0XMdeZ6icnT/74Xk9fnabWn+gZgpE+9V+gujL3hhJOoNrnDVY7tWdzc7NUTg==",
                    "_location": "/bson",
                    "_phantomChildren": "[Circular]",
                    "_requested": {
                      "type": "version",
                      "registry": true,
                      "raw": "bson@1.0.9",
                      "name": "bson",
                      "escapedName": "bson",
                      "rawSpec": "1.0.9",
                      "saveSpec": "[Circular]",
                      "fetchSpec": "1.0.9"
                    },
                    "_requiredBy": "[Circular]",
                    "_resolved": "https://registry.npmjs.org/bson/-/bson-1.0.9.tgz",
                    "_shasum": "12319f8323b1254739b7c6bef8d3e89ae05a2f57",
                    "_spec": "1.0.9",
                    "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                    "author": "[Circular]",
                    "browser": "lib/bson/bson.js",
                    "bugs": "[Circular]",
                    "bundleDependencies": false,
                    "config": "[Circular]",
                    "contributors": "[Circular]",
                    "deprecated": false,
                    "description": "A bson parser for node.js and the browser",
                    "devDependencies": "[Circular]",
                    "directories": "[Circular]",
                    "engines": "[Circular]",
                    "files": "[Circular]",
                    "homepage": "https://github.com/mongodb/js-bson#readme",
                    "keywords": "[Circular]",
                    "license": "Apache-2.0",
                    "main": "./index",
                    "name": "bson",
                    "repository": "[Circular]",
                    "scripts": "[Circular]",
                    "version": "1.0.9",
                    "readme": "# BSON parser\n\nBSON is short for Bin­ary JSON and is the bin­ary-en­coded seri­al­iz­a­tion of JSON-like doc­u­ments. You can learn more about it in [the specification](http://bsonspec.org).\n\nThis browser version of the BSON parser is compiled using [webpack](https://webpack.js.org/) and the current version is pre-compiled in the `browser_build` directory.\n\nThis is the default BSON parser, however, there is a C++ Node.js addon version as well that does not support the browser. It can be found at [mongod-js/bson-ext](https://github.com/mongodb-js/bson-ext).\n\n## Usage\n\nTo build a new version perform the following operations:\n\n```\nnpm install\nnpm run build\n```\n\nA simple example of how to use BSON in the browser:\n\n```html\n<script src=\"./browser_build/bson.js\"></script>\n\n<script>\n  function start() {\n    // Get the Long type\n    var Long = BSON.Long;\n    // Create a bson parser instance\n    var bson = new BSON();\n\n    // Serialize document\n    var doc = { long: Long.fromNumber(100) }\n\n    // Serialize a document\n    var data = bson.serialize(doc)\n    // De serialize it again\n    var doc_2 = bson.deserialize(data)\n  }\n</script>\n```\n\nA simple example of how to use BSON in `Node.js`:\n\n```js\n// Get BSON parser class\nvar BSON = require('bson')\n// Get the Long type\nvar Long = BSON.Long;\n// Create a bson parser instance\nvar bson = new BSON();\n\n// Serialize document\nvar doc = { long: Long.fromNumber(100) }\n\n// Serialize a document\nvar data = bson.serialize(doc)\nconsole.log('data:', data)\n\n// Deserialize the resulting Buffer\nvar doc_2 = bson.deserialize(data)\nconsole.log('doc_2:', doc_2)\n```\n\n## Installation\n\n`npm install bson`\n\n## API\n\n### BSON types\n\nFor all BSON types documentation, please refer to the following sources:\n  * [MongoDB BSON Type Reference](https://docs.mongodb.com/manual/reference/bson-types/)\n  * [BSON Spec](https://bsonspec.org/)\n\n### BSON serialization and deserialiation\n\n**`new BSON()`** - Creates a new BSON serializer/deserializer you can use to serialize and deserialize BSON.\n\n#### BSON.serialize\n\nThe BSON `serialize` method takes a JavaScript object and an optional options object and returns a Node.js Buffer.\n\n  * `BSON.serialize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.serializeWithBufferAndIndex\n\nThe BSON `serializeWithBufferAndIndex` method takes an object, a target buffer instance and an optional options object and returns the end serialization index in the final buffer.\n\n  * `BSON.serializeWithBufferAndIndex(object, buffer, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n    * @param {Boolean} [options.checkKeys=false] the serializer will check if keys are valid.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields.\n    * @param {Number} [options.index=0] the index in the buffer where we wish to start serializing into.\n    * @return {Number} returns the index pointing to the last written byte in the buffer.\n\n#### BSON.calculateObjectSize\n\nThe BSON `calculateObjectSize` method takes a JavaScript object and an optional options object and returns the size of the BSON object.\n\n  * `BSON.calculateObjectSize(object, options)`\n    * @param {Object} object the JavaScript object to serialize.\n    * @param {Boolean} [options.serializeFunctions=false] serialize the JavaScript functions.\n    * @param {Boolean} [options.ignoreUndefined=true]\n    * @return {Buffer} returns a Buffer instance.\n\n#### BSON.deserialize\n\nThe BSON `deserialize` method takes a Node.js Buffer and an optional options object and returns a deserialized JavaScript object.\n\n  * `BSON.deserialize(buffer, options)`\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Object} returns the deserialized Javascript Object.\n\n#### BSON.deserializeStream\n\nThe BSON `deserializeStream` method takes a Node.js Buffer, `startIndex` and allow more control over deserialization of a Buffer containing concatenated BSON documents.\n\n  * `BSON.deserializeStream(buffer, startIndex, numberOfDocuments, documents, docStartIndex, options)`\n    * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n    * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n    * @param {Number} numberOfDocuments number of documents to deserialize.\n    * @param {Array} documents an array where to store the deserialized documents.\n    * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n    * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n    * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n    * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n    * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n    * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a Node.js Buffer instance.\n    * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n    * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n    * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n    * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n\n## FAQ\n\n#### Why does `undefined` get converted to `null`?\n\nThe `undefined` BSON type has been [deprecated for many years](http://bsonspec.org/spec.html), so this library has dropped support for it. Use the `ignoreUndefined` option (for example, from the [driver](http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect) ) to instead remove `undefined` keys.\n\n#### How do I add custom serialization logic?\n\nThis library looks for `toBSON()` functions on every path, and calls the `toBSON()` function to get the value to serialize.\n\n```javascript\nvar bson = new BSON();\n\nclass CustomSerialize {\n  toBSON() {\n    return 42;\n  }\n}\n\nconst obj = { answer: new CustomSerialize() };\n// \"{ answer: 42 }\"\nconsole.log(bson.deserialize(bson.serialize(obj)));\n```\n",
                    "readmeFilename": "README.md",
                    "_args": "[Circular]",
                    "dependencies": {},
                    "optionalDependencies": "[Circular]",
                    "_dependencies": "[Circular]",
                    "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\bson",
                    "error": "[Circular]",
                    "extraneous": false,
                    "_deduped": "node_modules\\bson"
                  },
                  "require_optional": {
                    "_from": "require_optional@^1.0.1",
                    "_id": "require_optional@1.0.1",
                    "_integrity": "sha512-qhM/y57enGWHAe3v/NcwML6a3/vfESLe/sGM2dII+gEO0BpKRUkWZow/tyloNqJyN6kXSl3RyyM8Ll5D/sJP8g==",
                    "_location": "/require_optional",
                    "_phantomChildren": {},
                    "_requested": {
                      "type": "version",
                      "registry": true,
                      "raw": "require_optional@1.0.1",
                      "name": "require_optional",
                      "escapedName": "require_optional",
                      "rawSpec": "1.0.1",
                      "saveSpec": "[Circular]",
                      "fetchSpec": "1.0.1"
                    },
                    "_requiredBy": [
                      "/mongodb-core"
                    ],
                    "_resolved": "https://registry.npmjs.org/require_optional/-/require_optional-1.0.1.tgz",
                    "_shasum": "4cf35a4247f64ca3df8c2ef208cc494b1ca8fc2e",
                    "_spec": "1.0.1",
                    "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                    "author": {
                      "name": "Christian Kvalheim Amor"
                    },
                    "bugs": {
                      "url": "https://github.com/christkv/require_optional/issues"
                    },
                    "bundleDependencies": false,
                    "dependencies": {
                      "resolve-from": {
                        "_from": "resolve-from@^2.0.0",
                        "_id": "resolve-from@2.0.0",
                        "_integrity": "sha1-lICrIOlP+h2egKgEx+oUdhGWa1c=",
                        "_location": "/resolve-from",
                        "_phantomChildren": {},
                        "_requested": {
                          "type": "version",
                          "registry": true,
                          "raw": "resolve-from@2.0.0",
                          "name": "resolve-from",
                          "escapedName": "resolve-from",
                          "rawSpec": "2.0.0",
                          "saveSpec": "[Circular]",
                          "fetchSpec": "2.0.0"
                        },
                        "_requiredBy": [
                          "/require_optional"
                        ],
                        "_resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-2.0.0.tgz",
                        "_shasum": "9480ab20e94ffa1d9e80a804c7ea147611966b57",
                        "_spec": "2.0.0",
                        "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                        "author": {
                          "name": "Sindre Sorhus",
                          "email": "sindresorhus@gmail.com",
                          "url": "sindresorhus.com"
                        },
                        "bugs": {
                          "url": "https://github.com/sindresorhus/resolve-from/issues"
                        },
                        "bundleDependencies": false,
                        "deprecated": false,
                        "description": "Resolve the path of a module like require.resolve() but from a given path",
                        "devDependencies": {
                          "ava": "*",
                          "xo": "*"
                        },
                        "engines": {
                          "node": ">=0.10.0"
                        },
                        "files": [
                          "index.js"
                        ],
                        "homepage": "https://github.com/sindresorhus/resolve-from#readme",
                        "keywords": [
                          "require",
                          "resolve",
                          "path",
                          "module",
                          "from",
                          "like",
                          "path"
                        ],
                        "license": "MIT",
                        "name": "resolve-from",
                        "repository": {
                          "type": "git",
                          "url": "git+https://github.com/sindresorhus/resolve-from.git"
                        },
                        "scripts": {
                          "test": "xo && ava"
                        },
                        "version": "2.0.0",
                        "readme": "# resolve-from [![Build Status](https://travis-ci.org/sindresorhus/resolve-from.svg?branch=master)](https://travis-ci.org/sindresorhus/resolve-from)\n\n> Resolve the path of a module like [`require.resolve()`](http://nodejs.org/api/globals.html#globals_require_resolve) but from a given path\n\nUnlike `require.resolve()` it returns `null` instead of throwing when the module can't be found.\n\n\n## Install\n\n```\n$ npm install --save resolve-from\n```\n\n\n## Usage\n\n```js\nconst resolveFrom = require('resolve-from');\n\n// there's a file at `./foo/bar.js`\n\nresolveFrom('foo', './bar');\n//=> '/Users/sindresorhus/dev/test/foo/bar.js'\n```\n\n\n## API\n\n### resolveFrom(fromDir, moduleId)\n\n#### fromDir\n\nType: `string`\n\nDirectory to resolve from.\n\n#### moduleId\n\nType: `string`\n\nWhat you would use in `require()`.\n\n\n## Tip\n\nCreate a partial using a bound function if you want to require from the same `fromDir` multiple times:\n\n```js\nconst resolveFromFoo = resolveFrom.bind(null, 'foo');\n\nresolveFromFoo('./bar');\nresolveFromFoo('./baz');\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                        "readmeFilename": "readme.md",
                        "_args": [
                          [
                            "resolve-from@2.0.0",
                            "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                          ]
                        ],
                        "dependencies": {},
                        "optionalDependencies": {},
                        "_dependencies": {},
                        "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\resolve-from",
                        "error": "[Circular]",
                        "extraneous": false
                      },
                      "semver": {
                        "_from": "semver@^5.1.0",
                        "_id": "semver@5.6.0",
                        "_integrity": "sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==",
                        "_location": "/semver",
                        "_phantomChildren": {},
                        "_requested": {
                          "type": "version",
                          "registry": true,
                          "raw": "semver@5.6.0",
                          "name": "semver",
                          "escapedName": "semver",
                          "rawSpec": "5.6.0",
                          "saveSpec": "[Circular]",
                          "fetchSpec": "5.6.0"
                        },
                        "_requiredBy": [
                          "/require_optional"
                        ],
                        "_resolved": "https://registry.npmjs.org/semver/-/semver-5.6.0.tgz",
                        "_shasum": "7e74256fbaa49c75aa7c7a205cc22799cac80004",
                        "_spec": "5.6.0",
                        "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                        "bin": {
                          "semver": "./bin/semver"
                        },
                        "bugs": {
                          "url": "https://github.com/npm/node-semver/issues"
                        },
                        "bundleDependencies": false,
                        "deprecated": false,
                        "description": "The semantic version parser used by npm.",
                        "devDependencies": {
                          "tap": "^12.0.1"
                        },
                        "files": [
                          "bin",
                          "range.bnf",
                          "semver.js"
                        ],
                        "homepage": "https://github.com/npm/node-semver#readme",
                        "license": "ISC",
                        "main": "semver.js",
                        "name": "semver",
                        "repository": {
                          "type": "git",
                          "url": "git+https://github.com/npm/node-semver.git"
                        },
                        "scripts": {
                          "test": "tap test/*.js --cov -J"
                        },
                        "version": "5.6.0",
                        "readme": "semver(1) -- The semantic versioner for npm\n===========================================\n\n## Install\n\n```bash\nnpm install --save semver\n````\n\n## Usage\n\nAs a node module:\n\n```js\nconst semver = require('semver')\n\nsemver.valid('1.2.3') // '1.2.3'\nsemver.valid('a.b.c') // null\nsemver.clean('  =v1.2.3   ') // '1.2.3'\nsemver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true\nsemver.gt('1.2.3', '9.8.7') // false\nsemver.lt('1.2.3', '9.8.7') // true\nsemver.valid(semver.coerce('v2')) // '2.0.0'\nsemver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7'\n```\n\nAs a command-line utility:\n\n```\n$ semver -h\n\nA JavaScript implementation of the http://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\n-p --include-prerelease\n        Always include prerelease versions in range matching\n\n-c --coerce\n        Coerce a string into SemVer if possible\n        (does not imply --loose)\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.\n```\n\n## Versions\n\nA \"version\" is described by the `v2.0.0` specification found at\n<http://semver.org/>.\n\nA leading `\"=\"` or `\"v\"` character is stripped off and ignored.\n\n## Ranges\n\nA `version range` is a set of `comparators` which specify versions\nthat satisfy the range.\n\nA `comparator` is composed of an `operator` and a `version`.  The set\nof primitive `operators` is:\n\n* `<` Less than\n* `<=` Less than or equal to\n* `>` Greater than\n* `>=` Greater than or equal to\n* `=` Equal.  If no operator is specified, then equality is assumed,\n  so this operator is optional, but MAY be included.\n\nFor example, the comparator `>=1.2.7` would match the versions\n`1.2.7`, `1.2.8`, `2.5.3`, and `1.3.9`, but not the versions `1.2.6`\nor `1.1.0`.\n\nComparators can be joined by whitespace to form a `comparator set`,\nwhich is satisfied by the **intersection** of all of the comparators\nit includes.\n\nA range is composed of one or more comparator sets, joined by `||`.  A\nversion matches a range if and only if every comparator in at least\none of the `||`-separated comparator sets is satisfied by the version.\n\nFor example, the range `>=1.2.7 <1.3.0` would match the versions\n`1.2.7`, `1.2.8`, and `1.2.99`, but not the versions `1.2.6`, `1.3.0`,\nor `1.1.0`.\n\nThe range `1.2.7 || >=1.2.9 <2.0.0` would match the versions `1.2.7`,\n`1.2.9`, and `1.4.6`, but not the versions `1.2.8` or `2.0.0`.\n\n### Prerelease Tags\n\nIf a version has a prerelease tag (for example, `1.2.3-alpha.3`) then\nit will only be allowed to satisfy comparator sets if at least one\ncomparator with the same `[major, minor, patch]` tuple also has a\nprerelease tag.\n\nFor example, the range `>1.2.3-alpha.3` would be allowed to match the\nversion `1.2.3-alpha.7`, but it would *not* be satisfied by\n`3.4.5-alpha.9`, even though `3.4.5-alpha.9` is technically \"greater\nthan\" `1.2.3-alpha.3` according to the SemVer sort rules.  The version\nrange only accepts prerelease tags on the `1.2.3` version.  The\nversion `3.4.5` *would* satisfy the range, because it does not have a\nprerelease flag, and `3.4.5` is greater than `1.2.3-alpha.7`.\n\nThe purpose for this behavior is twofold.  First, prerelease versions\nfrequently are updated very quickly, and contain many breaking changes\nthat are (by the author's design) not yet fit for public consumption.\nTherefore, by default, they are excluded from range matching\nsemantics.\n\nSecond, a user who has opted into using a prerelease version has\nclearly indicated the intent to use *that specific* set of\nalpha/beta/rc versions.  By including a prerelease tag in the range,\nthe user is indicating that they are aware of the risk.  However, it\nis still not appropriate to assume that they have opted into taking a\nsimilar risk on the *next* set of prerelease versions.\n\n#### Prerelease Identifiers\n\nThe method `.inc` takes an additional `identifier` string argument that\nwill append the value of the string as a prerelease identifier:\n\n```javascript\nsemver.inc('1.2.3', 'prerelease', 'beta')\n// '1.2.4-beta.0'\n```\n\ncommand-line example:\n\n```bash\n$ semver 1.2.3 -i prerelease --preid beta\n1.2.4-beta.0\n```\n\nWhich then can be used to increment further:\n\n```bash\n$ semver 1.2.4-beta.0 -i prerelease\n1.2.4-beta.1\n```\n\n### Advanced Range Syntax\n\nAdvanced range syntax desugars to primitive comparators in\ndeterministic ways.\n\nAdvanced ranges may be combined in the same way as primitive\ncomparators using white space or `||`.\n\n#### Hyphen Ranges `X.Y.Z - A.B.C`\n\nSpecifies an inclusive set.\n\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\n\nIf a partial version is provided as the first version in the inclusive\nrange, then the missing pieces are replaced with zeroes.\n\n* `1.2 - 2.3.4` := `>=1.2.0 <=2.3.4`\n\nIf a partial version is provided as the second version in the\ninclusive range, then all versions that start with the supplied parts\nof the tuple are accepted, but nothing that would be greater than the\nprovided tuple parts.\n\n* `1.2.3 - 2.3` := `>=1.2.3 <2.4.0`\n* `1.2.3 - 2` := `>=1.2.3 <3.0.0`\n\n#### X-Ranges `1.2.x` `1.X` `1.2.*` `*`\n\nAny of `X`, `x`, or `*` may be used to \"stand in\" for one of the\nnumeric values in the `[major, minor, patch]` tuple.\n\n* `*` := `>=0.0.0` (Any version satisfies)\n* `1.x` := `>=1.0.0 <2.0.0` (Matching major version)\n* `1.2.x` := `>=1.2.0 <1.3.0` (Matching major and minor versions)\n\nA partial version range is treated as an X-Range, so the special\ncharacter is in fact optional.\n\n* `\"\"` (empty string) := `*` := `>=0.0.0`\n* `1` := `1.x.x` := `>=1.0.0 <2.0.0`\n* `1.2` := `1.2.x` := `>=1.2.0 <1.3.0`\n\n#### Tilde Ranges `~1.2.3` `~1.2` `~1`\n\nAllows patch-level changes if a minor version is specified on the\ncomparator.  Allows minor-level changes if not.\n\n* `~1.2.3` := `>=1.2.3 <1.(2+1).0` := `>=1.2.3 <1.3.0`\n* `~1.2` := `>=1.2.0 <1.(2+1).0` := `>=1.2.0 <1.3.0` (Same as `1.2.x`)\n* `~1` := `>=1.0.0 <(1+1).0.0` := `>=1.0.0 <2.0.0` (Same as `1.x`)\n* `~0.2.3` := `>=0.2.3 <0.(2+1).0` := `>=0.2.3 <0.3.0`\n* `~0.2` := `>=0.2.0 <0.(2+1).0` := `>=0.2.0 <0.3.0` (Same as `0.2.x`)\n* `~0` := `>=0.0.0 <(0+1).0.0` := `>=0.0.0 <1.0.0` (Same as `0.x`)\n* `~1.2.3-beta.2` := `>=1.2.3-beta.2 <1.3.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n\n#### Caret Ranges `^1.2.3` `^0.2.5` `^0.0.4`\n\nAllows changes that do not modify the left-most non-zero digit in the\n`[major, minor, patch]` tuple.  In other words, this allows patch and\nminor updates for versions `1.0.0` and above, patch updates for\nversions `0.X >=0.1.0`, and *no* updates for versions `0.0.X`.\n\nMany authors treat a `0.x` version as if the `x` were the major\n\"breaking-change\" indicator.\n\nCaret ranges are ideal when an author may make breaking changes\nbetween `0.2.4` and `0.3.0` releases, which is a common practice.\nHowever, it presumes that there will *not* be breaking changes between\n`0.2.4` and `0.2.5`.  It allows for changes that are presumed to be\nadditive (but non-breaking), according to commonly observed practices.\n\n* `^1.2.3` := `>=1.2.3 <2.0.0`\n* `^0.2.3` := `>=0.2.3 <0.3.0`\n* `^0.0.3` := `>=0.0.3 <0.0.4`\n* `^1.2.3-beta.2` := `>=1.2.3-beta.2 <2.0.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n* `^0.0.3-beta` := `>=0.0.3-beta <0.0.4`  Note that prereleases in the\n  `0.0.3` version *only* will be allowed, if they are greater than or\n  equal to `beta`.  So, `0.0.3-pr.2` would be allowed.\n\nWhen parsing caret ranges, a missing `patch` value desugars to the\nnumber `0`, but will allow flexibility within that value, even if the\nmajor and minor versions are both `0`.\n\n* `^1.2.x` := `>=1.2.0 <2.0.0`\n* `^0.0.x` := `>=0.0.0 <0.1.0`\n* `^0.0` := `>=0.0.0 <0.1.0`\n\nA missing `minor` and `patch` values will desugar to zero, but also\nallow flexibility within those values, even if the major version is\nzero.\n\n* `^1.x` := `>=1.0.0 <2.0.0`\n* `^0.x` := `>=0.0.0 <1.0.0`\n\n### Range Grammar\n\nPutting all this together, here is a Backus-Naur grammar for ranges,\nfor the benefit of parser authors:\n\n```bnf\nrange-set  ::= range ( logical-or range ) *\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\nhyphen     ::= partial ' - ' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\nxr         ::= 'x' | 'X' | '*' | nr\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\ntilde      ::= '~' partial\ncaret      ::= '^' partial\nqualifier  ::= ( '-' pre )? ( '+' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( '.' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n```\n\n## Functions\n\nAll methods and classes take a final `options` object argument.  All\noptions in this object are `false` by default.  The options supported\nare:\n\n- `loose`  Be more forgiving about not-quite-valid semver strings.\n  (Any resulting output will always be 100% strict compliant, of\n  course.)  For backwards compatibility reasons, if the `options`\n  argument is a boolean value instead of an object, it is interpreted\n  to be the `loose` param.\n- `includePrerelease`  Set to suppress the [default\n  behavior](https://github.com/npm/node-semver#prerelease-tags) of\n  excluding prerelease tagged versions from ranges unless they are\n  explicitly opted into.\n\nStrict-mode Comparators and Ranges will be strict about the SemVer\nstrings that they parse.\n\n* `valid(v)`: Return the parsed version, or null if it's not valid.\n* `inc(v, release)`: Return the version incremented by the release\n  type (`major`,   `premajor`, `minor`, `preminor`, `patch`,\n  `prepatch`, or `prerelease`), or null if it's not valid\n  * `premajor` in one call will bump the version up to the next major\n    version and down to a prerelease of that major version.\n    `preminor`, and `prepatch` work the same way.\n  * If called from a non-prerelease version, the `prerelease` will work the\n    same as `prepatch`. It increments the patch version, then makes a\n    prerelease. If the input version is already a prerelease it simply\n    increments it.\n* `prerelease(v)`: Returns an array of prerelease components, or null\n  if none exist. Example: `prerelease('1.2.3-alpha.1') -> ['alpha', 1]`\n* `major(v)`: Return the major version number.\n* `minor(v)`: Return the minor version number.\n* `patch(v)`: Return the patch version number.\n* `intersects(r1, r2, loose)`: Return true if the two supplied ranges\n  or comparators intersect.\n\n### Comparison\n\n* `gt(v1, v2)`: `v1 > v2`\n* `gte(v1, v2)`: `v1 >= v2`\n* `lt(v1, v2)`: `v1 < v2`\n* `lte(v1, v2)`: `v1 <= v2`\n* `eq(v1, v2)`: `v1 == v2` This is true if they're logically equivalent,\n  even if they're not the exact same string.  You already know how to\n  compare strings.\n* `neq(v1, v2)`: `v1 != v2` The opposite of `eq`.\n* `cmp(v1, comparator, v2)`: Pass in a comparison string, and it'll call\n  the corresponding function above.  `\"===\"` and `\"!==\"` do simple\n  string comparison, but are included for completeness.  Throws if an\n  invalid comparison string is provided.\n* `compare(v1, v2)`: Return `0` if `v1 == v2`, or `1` if `v1` is greater, or `-1` if\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\n* `rcompare(v1, v2)`: The reverse of compare.  Sorts an array of versions\n  in descending order when passed to `Array.sort()`.\n* `diff(v1, v2)`: Returns difference between two versions by the release type\n  (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),\n  or null if the versions are the same.\n\n### Comparators\n\n* `intersects(comparator)`: Return true if the comparators intersect\n\n### Ranges\n\n* `validRange(range)`: Return the valid range or null if it's not valid\n* `satisfies(version, range)`: Return true if the version satisfies the\n  range.\n* `maxSatisfying(versions, range)`: Return the highest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `minSatisfying(versions, range)`: Return the lowest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `gtr(version, range)`: Return `true` if version is greater than all the\n  versions possible in the range.\n* `ltr(version, range)`: Return `true` if version is less than all the\n  versions possible in the range.\n* `outside(version, range, hilo)`: Return true if the version is outside\n  the bounds of the range in either the high or low direction.  The\n  `hilo` argument must be either the string `'>'` or `'<'`.  (This is\n  the function called by `gtr` and `ltr`.)\n* `intersects(range)`: Return true if any of the ranges comparators intersect\n\nNote that, since ranges may be non-contiguous, a version might not be\ngreater than a range, less than a range, *or* satisfy a range!  For\nexample, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`\nuntil `2.0.0`, so the version `1.2.10` would not be greater than the\nrange (because `2.0.1` satisfies, which is higher), nor less than the\nrange (since `1.2.8` satisfies, which is lower), and it also does not\nsatisfy the range.\n\nIf you want to know if a version satisfies or does not satisfy a\nrange, use the `satisfies(version, range)` function.\n\n### Coercion\n\n* `coerce(version)`: Coerces a string to semver if possible\n\nThis aims to provide a very forgiving translation of a non-semver\nstring to semver. It looks for the first digit in a string, and\nconsumes all remaining characters which satisfy at least a partial semver\n(e.g., `1`, `1.2`, `1.2.3`) up to the max permitted length (256 characters).\nLonger versions are simply truncated (`4.6.3.9.2-alpha2` becomes `4.6.3`).\nAll surrounding text is simply ignored (`v3.4 replaces v3.3.1` becomes `3.4.0`).\nOnly text which lacks digits will fail coercion (`version one` is not valid).\nThe maximum  length for any semver component considered for coercion is 16 characters;\nlonger components will be ignored (`10000000000000000.4.7.4` becomes `4.7.4`).\nThe maximum value for any semver component is `Integer.MAX_SAFE_INTEGER || (2**53 - 1)`;\nhigher value components are invalid (`9999999999999999.4.7.4` is likely invalid).\n",
                        "readmeFilename": "README.md",
                        "_args": [
                          [
                            "semver@5.6.0",
                            "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                          ]
                        ],
                        "dependencies": {},
                        "optionalDependencies": {},
                        "_dependencies": {},
                        "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\semver",
                        "error": "[Circular]",
                        "extraneous": false,
                        "_deduped": "node_modules\\semver"
                      }
                    },
                    "deprecated": false,
                    "description": "Allows you declare optionalPeerDependencies that can be satisfied by the top level module but ignored if they are not.",
                    "devDependencies": {
                      "bson": "0.4.21",
                      "co": "4.6.0",
                      "es6-promise": "^3.0.2",
                      "mocha": "^2.4.5"
                    },
                    "homepage": "https://github.com/christkv/require_optional",
                    "keywords": [
                      "optional",
                      "require",
                      "optionalPeerDependencies"
                    ],
                    "license": "Apache-2.0",
                    "main": "index.js",
                    "name": "require_optional",
                    "peerOptionalDependencies": {
                      "co": ">=5.6.0",
                      "es6-promise": "^3.0.2",
                      "es6-promise2": "^4.0.2",
                      "bson": "0.4.21"
                    },
                    "repository": {
                      "type": "git",
                      "url": "git+https://github.com/christkv/require_optional.git"
                    },
                    "scripts": {
                      "test": "mocha"
                    },
                    "version": "1.0.1",
                    "readme": "# require_optional\nWork around the problem that we do not have a optionalPeerDependencies concept in node.js making it a hassle to optionally include native modules\n",
                    "readmeFilename": "README.md",
                    "_args": [
                      [
                        "require_optional@1.0.1",
                        "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                      ]
                    ],
                    "optionalDependencies": {},
                    "_dependencies": {
                      "resolve-from": "^2.0.0",
                      "semver": "^5.1.0"
                    },
                    "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\require_optional",
                    "error": "[Circular]",
                    "extraneous": false
                  }
                },
                "deprecated": false,
                "description": "Core MongoDB driver functionality, no bells and whistles and meant for integration not end applications",
                "devDependencies": {
                  "chai": "^4.1.2",
                  "co": "^4.6.0",
                  "conventional-changelog-cli": "^1.3.5",
                  "eslint": "^4.6.1",
                  "eslint-plugin-prettier": "^2.2.0",
                  "jsdoc": "3.5.4",
                  "mongodb-mock-server": "^1.0.0",
                  "mongodb-test-runner": "^1.1.18",
                  "prettier": "^1.6.1",
                  "snappy": "^6.0.1"
                },
                "homepage": "https://github.com/mongodb-js/mongodb-core",
                "keywords": [
                  "mongodb",
                  "core"
                ],
                "license": "Apache-2.0",
                "main": "index.js",
                "name": "mongodb-core",
                "peerOptionalDependencies": {
                  "kerberos": "^0.0.23",
                  "snappy": "^6.0.1",
                  "bson-ext": "1.0.5"
                },
                "repository": {
                  "type": "git",
                  "url": "git://github.com/mongodb-js/mongodb-core.git"
                },
                "scripts": {
                  "changelog": "conventional-changelog -p angular -i HISTORY.md -s",
                  "coverage": "nyc node test/runner.js -t functional -l && node_modules/.bin/nyc report --reporter=text-lcov | node_modules/.bin/coveralls",
                  "format": "prettier --print-width 100 --tab-width 2 --single-quote --write index.js 'test/**/*.js' 'lib/**/*.js'",
                  "lint": "eslint index.js lib test",
                  "test": "npm run lint && mongodb-test-runner -t 60000 test/tests"
                },
                "version": "3.0.9",
                "readme": "[![Build Status](https://secure.travis-ci.org/mongodb-js/mongodb-core.png)](http://travis-ci.org/mongodb-js/mongodb-core)\n[![Coverage Status](https://coveralls.io/repos/github/mongodb-js/mongodb-core/badge.svg?branch=1.3)](https://coveralls.io/github/mongodb-js/mongodb-core?branch=1.3)\n\n# Description\n\nThe MongoDB Core driver is the low level part of the 2.0 or higher MongoDB driver and is meant for library developers not end users. It does not contain any abstractions or helpers outside of the basic management of MongoDB topology connections, CRUD operations and authentication.\n\n## MongoDB Node.JS Core Driver\n\n| what          | where                                          |\n|---------------|------------------------------------------------|\n| documentation | http://mongodb.github.io/node-mongodb-native/  |\n| apidoc        | http://mongodb.github.io/node-mongodb-native/  |\n| source        | https://github.com/mongodb-js/mongodb-core     |\n| mongodb       | http://www.mongodb.org/                        |\n\n### Blogs of Engineers involved in the driver\n- Christian Kvalheim [@christkv](https://twitter.com/christkv) <http://christiankvalheim.com>\n\n### Bugs / Feature Requests\n\nThink you’ve found a bug? Want to see a new feature in node-mongodb-native? Please open a\ncase in our issue management tool, JIRA:\n\n- Create an account and login <https://jira.mongodb.org>.\n- Navigate to the NODE project <https://jira.mongodb.org/browse/NODE>.\n- Click **Create Issue** - Please provide as much information as possible about the issue type and how to reproduce it.\n\nBug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the\nCore Server (i.e. SERVER) project are **public**.\n\n### Questions and Bug Reports\n\n * mailing list: https://groups.google.com/forum/#!forum/node-mongodb-native\n * jira: http://jira.mongodb.org/\n\n### Change Log\n\nhttp://jira.mongodb.org/browse/NODE\n\n# QuickStart\n\nThe quick start guide will show you how to set up a simple application using Core driver and MongoDB. It scope is only how to set up the driver and perform the simple crud operations. For more inn depth coverage we encourage reading the tutorials.\n\n## Create the package.json file\n\nLet's create a directory where our application will live. In our case we will put this under our projects directory.\n\n```\nmkdir myproject\ncd myproject\n```\n\nCreate a **package.json** using your favorite text editor and fill it in.\n\n```json\n{\n  \"name\": \"myproject\",\n  \"version\": \"1.0.0\",\n  \"description\": \"My first project\",\n  \"main\": \"index.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/christkv/myfirstproject.git\"\n  },\n  \"dependencies\": {\n    \"mongodb-core\": \"~1.0\"\n  },\n  \"author\": \"Christian Kvalheim\",\n  \"license\": \"Apache 2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/christkv/myfirstproject/issues\"\n  },\n  \"homepage\": \"https://github.com/christkv/myfirstproject\"\n}\n```\n\nSave the file and return to the shell or command prompt and use **NPM** to install all the dependencies.\n\n```\nnpm install\n```\n\nYou should see **NPM** download a lot of files. Once it's done you'll find all the downloaded packages under the **node_modules** directory.\n\nBooting up a MongoDB Server\n---------------------------\nLet's boot up a MongoDB server instance. Download the right MongoDB version from [MongoDB](http://www.mongodb.org), open a new shell or command line and ensure the **mongod** command is in the shell or command line path. Now let's create a database directory (in our case under **/data**).\n\n```\nmongod --dbpath=/data --port 27017\n```\n\nYou should see the **mongod** process start up and print some status information.\n\n## Connecting to MongoDB\n\nLet's create a new **app.js** file that we will use to show the basic CRUD operations using the MongoDB driver.\n\nFirst let's add code to connect to the server. Notice that there is no concept of a database here and we use the topology directly to perform the connection.\n\n```js\nvar Server = require('mongodb-core').Server\n  , assert = require('assert');\n\n// Set up server connection\nvar server = new Server({\n    host: 'localhost'\n  , port: 27017\n  , reconnect: true\n  , reconnectInterval: 50\n});\n\n// Add event listeners\nserver.on('connect', function(_server) {\n  console.log('connected');\n  test.done();\n});\n\nserver.on('close', function() {\n  console.log('closed');\n});\n\nserver.on('reconnect', function() {\n  console.log('reconnect');\n});\n\n// Start connection\nserver.connect();\n```\n\nTo connect to a replicaset we would use the `ReplSet` class and for a set of Mongos proxies we use the `Mongos` class. Each topology class offer the same CRUD operations and you operate on the topology directly. Let's look at an example exercising all the different available CRUD operations.\n\n```js\nvar Server = require('mongodb-core').Server\n  , assert = require('assert');\n\n// Set up server connection\nvar server = new Server({\n    host: 'localhost'\n  , port: 27017\n  , reconnect: true\n  , reconnectInterval: 50\n});\n\n// Add event listeners\nserver.on('connect', function(_server) {\n  console.log('connected');\n\n  // Execute the ismaster command\n  _server.command('system.$cmd', {ismaster: true}, function(err, result) {\n\n    // Perform a document insert\n    _server.insert('myproject.inserts1', [{a:1}, {a:2}], {\n      writeConcern: {w:1}, ordered:true\n    }, function(err, results) {\n      assert.equal(null, err);\n      assert.equal(2, results.result.n);      \n\n      // Perform a document update\n      _server.update('myproject.inserts1', [{\n        q: {a: 1}, u: {'$set': {b:1}}\n      }], {\n        writeConcern: {w:1}, ordered:true\n      }, function(err, results) {\n        assert.equal(null, err);\n        assert.equal(1, results.result.n);\n\n        // Remove a document\n        _server.remove('myproject.inserts1', [{\n          q: {a: 1}, limit: 1\n        }], {\n          writeConcern: {w:1}, ordered:true\n        }, function(err, results) {\n          assert.equal(null, err);\n          assert.equal(1, results.result.n);\n\n          // Get a document\n          var cursor = _server.cursor('integration_tests.inserts_example4', {\n              find: 'integration_tests.example4'\n            , query: {a:1}\n          });\n\n          // Get the first document\n          cursor.next(function(err, doc) {\n            assert.equal(null, err);\n            assert.equal(2, doc.a);\n\n            // Execute the ismaster command\n            _server.command(\"system.$cmd\"\n              , {ismaster: true}, function(err, result) {\n                assert.equal(null, err)\n                _server.destroy();              \n            });\n          });\n      });\n    });\n\n    test.done();\n  });\n});\n\nserver.on('close', function() {\n  console.log('closed');\n});\n\nserver.on('reconnect', function() {\n  console.log('reconnect');\n});\n\n// Start connection\nserver.connect();\n```\n\nThe core driver does not contain any helpers or abstractions only the core crud operations. These consist of the following commands.\n\n* `insert`, Insert takes an array of 1 or more documents to be inserted against the topology and allows you to specify a write concern and if you wish to execute the inserts in order or out of order.\n* `update`, Update takes an array of 1 or more update commands to be executed against the server topology and also allows you to specify a write concern and if you wish to execute the updates in order or out of order.\n* `remove`, Remove takes an array of 1 or more remove commands to be executed against the server topology and also allows you to specify a write concern and if you wish to execute the removes in order or out of order.\n* `cursor`, Returns you a cursor for either the 'virtual' `find` command, a command that returns a cursor id or a plain cursor id. Read the cursor tutorial for more inn depth coverage.\n* `command`, Executes a command against MongoDB and returns the result.\n* `auth`, Authenticates the current topology using a supported authentication scheme.\n\nThe Core Driver is a building block for library builders and is not meant for usage by end users as it lacks a lot of features the end user might need such as automatic buffering of operations when a primary is changing in a replicaset or the db and collections abstraction.\n\n## Next steps\n\nThe next step is to get more in depth information about how the different aspects of the core driver works and how to leverage them to extend the functionality of the cursors. Please view the tutorials for more detailed information.\n",
                "readmeFilename": "README.md",
                "_args": [
                  [
                    "mongodb-core@3.0.9",
                    "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                  ]
                ],
                "optionalDependencies": {},
                "_dependencies": {
                  "bson": "~1.0.4",
                  "require_optional": "^1.0.1"
                },
                "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\mongodb-core",
                "error": "[Circular]",
                "extraneous": false
              }
            },
            "deprecated": false,
            "description": "The official MongoDB driver for Node.js",
            "devDependencies": {
              "bluebird": "3.5.0",
              "bson": "^1.0.4",
              "chai": "^4.1.1",
              "co": "4.6.0",
              "conventional-changelog-cli": "^1.3.5",
              "coveralls": "^2.11.6",
              "eslint": "^4.5.0",
              "eslint-plugin-prettier": "^2.2.0",
              "istanbul": "^0.4.5",
              "jsdoc": "3.5.4",
              "mongodb-extjson": "^2.1.1",
              "mongodb-mock-server": "^1.0.0",
              "mongodb-test-runner": "^1.1.18",
              "prettier": "~1.12.0",
              "semver": "5.4.1",
              "sinon": "^4.3.0",
              "worker-farm": "^1.5.0"
            },
            "engines": {
              "node": ">=4"
            },
            "homepage": "https://github.com/mongodb/node-mongodb-native",
            "keywords": [
              "mongodb",
              "driver",
              "official"
            ],
            "license": "Apache-2.0",
            "main": "index.js",
            "name": "mongodb",
            "repository": {
              "type": "git",
              "url": "git+ssh://git@github.com/mongodb/node-mongodb-native.git"
            },
            "scripts": {
              "bench": "node test/driverBench/",
              "changelog": "conventional-changelog -p angular -i HISTORY.md -s",
              "coverage": "istanbul cover mongodb-test-runner -- -t 60000  test/unit test/functional",
              "format": "prettier --print-width 100 --tab-width 2 --single-quote --write 'test/**/*.js' 'lib/**/*.js'",
              "lint": "eslint lib test",
              "test": "npm run lint && mongodb-test-runner -t 60000 test/unit test/functional"
            },
            "version": "3.0.10",
            "readme": "[![npm](https://nodei.co/npm/mongodb.png?downloads=true&downloadRank=true)](https://nodei.co/npm/mongodb/) [![npm](https://nodei.co/npm-dl/mongodb.png?months=6&height=3)](https://nodei.co/npm/mongodb/)\n\n[![Build Status](https://secure.travis-ci.org/mongodb/node-mongodb-native.svg?branch=2.1)](http://travis-ci.org/mongodb/node-mongodb-native)\n[![Coverage Status](https://coveralls.io/repos/github/mongodb/node-mongodb-native/badge.svg?branch=2.1)](https://coveralls.io/github/mongodb/node-mongodb-native?branch=2.1)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mongodb/node-mongodb-native?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n# Description\n\nThe official [MongoDB](https://www.mongodb.com/) driver for Node.js. Provides a high-level API on top of [mongodb-core](https://www.npmjs.com/package/mongodb-core) that is meant for end users.\n\n**NOTE: v3.x was recently released with breaking API changes. You can find a list of changes [here](CHANGES_3.0.0.md).**\n\n## MongoDB Node.JS Driver\n\n| what          | where                                          |\n|---------------|------------------------------------------------|\n| documentation | http://mongodb.github.io/node-mongodb-native  |\n| api-doc        | http://mongodb.github.io/node-mongodb-native/3.0/api  |\n| source        | https://github.com/mongodb/node-mongodb-native |\n| mongodb       | http://www.mongodb.org                        |\n\n### Bugs / Feature Requests\n\nThink you’ve found a bug? Want to see a new feature in `node-mongodb-native`? Please open a\ncase in our issue management tool, JIRA:\n\n- Create an account and login [jira.mongodb.org](https://jira.mongodb.org).\n- Navigate to the NODE project [jira.mongodb.org/browse/NODE](https://jira.mongodb.org/browse/NODE).\n- Click **Create Issue** - Please provide as much information as possible about the issue type and how to reproduce it.\n\nBug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the\nCore Server (i.e. SERVER) project are **public**.\n\n### Questions and Bug Reports\n\n * Mailing List: [groups.google.com/forum/#!forum/node-mongodb-native](https://groups.google.com/forum/#!forum/node-mongodb-native)\n * JIRA: [jira.mongodb.org](http://jira.mongodb.org)\n\n### Change Log\n\nChange history can be found in [`HISTORY.md`](HISTORY.md).\n\n# Installation\n\nThe recommended way to get started using the Node.js 3.0 driver is by using the `npm` (Node Package Manager) to install the dependency in your project.\n\n## MongoDB Driver\n\nGiven that you have created your own project using `npm init` we install the MongoDB driver and its dependencies by executing the following `npm` command.\n\n```bash\nnpm install mongodb --save\n```\n\nThis will download the MongoDB driver and add a dependency entry in your `package.json` file.\n\nYou can also use the [Yarn](https://yarnpkg.com/en) package manager.\n\n## Troubleshooting\n\nThe MongoDB driver depends on several other packages. These are:\n\n* [mongodb-core](https://github.com/mongodb-js/mongodb-core)\n* [bson](https://github.com/mongodb/js-bson)\n* [kerberos](https://github.com/mongodb-js/kerberos)\n* [node-gyp](https://github.com/nodejs/node-gyp)\n\nThe `kerberos` package is a C++ extension that requires a build environment to be installed on your system. You must be able to build Node.js itself in order to compile and install the `kerberos` module. Furthermore, the `kerberos` module requires the MIT Kerberos package to correctly compile on UNIX operating systems. Consult your UNIX operation system package manager for what libraries to install.\n\n**Windows already contains the SSPI API used for Kerberos authentication. However, you will need to install a full compiler tool chain using Visual Studio C++ to correctly install the Kerberos extension.**\n\n### Diagnosing on UNIX\n\nIf you don’t have the build-essentials, this module won’t build. In the case of Linux, you will need gcc, g++, Node.js with all the headers and Python. The easiest way to figure out what’s missing is by trying to build the Kerberos project. You can do this by performing the following steps.\n\n```bash\ngit clone https://github.com/mongodb-js/kerberos\ncd kerberos\nnpm install\n```\n\nIf all the steps complete, you have the right toolchain installed. If you get the error \"node-gyp not found,\" you need to install `node-gyp` globally:\n\n```bash\nnpm install -g node-gyp\n```\n\nIf it correctly compiles and runs the tests you are golden. We can now try to install the `mongod` driver by performing the following command.\n\n```bash\ncd yourproject\nnpm install mongodb --save\n```\n\nIf it still fails the next step is to examine the npm log. Rerun the command but in this case in verbose mode.\n\n```bash\nnpm --loglevel verbose install mongodb\n```\n\nThis will print out all the steps npm is performing while trying to install the module.\n\n### Diagnosing on Windows\n\nA compiler tool chain known to work for compiling `kerberos` on Windows is the following.\n\n* Visual Studio C++ 2010 (do not use higher versions)\n* Windows 7 64bit SDK\n* Python 2.7 or higher\n\nOpen the Visual Studio command prompt. Ensure `node.exe` is in your path and install `node-gyp`.\n\n```bash\nnpm install -g node-gyp\n```\n\nNext, you will have to build the project manually to test it. Clone the repo, install dependencies and rebuild:\n\n```bash\ngit clone https://github.com/christkv/kerberos.git\ncd kerberos\nnpm install\nnode-gyp rebuild\n```\n\nThis should rebuild the driver successfully if you have everything set up correctly.\n\n### Other possible issues\n\nYour Python installation might be hosed making gyp break. Test your deployment environment first by trying to build Node.js itself on the server in question, as this should unearth any issues with broken packages (and there are a lot of broken packages out there).\n\nAnother tip is to ensure your user has write permission to wherever the Node.js modules are being installed.\n\n## Quick Start\n\nThis guide will show you how to set up a simple application using Node.js and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the [tutorials](docs/reference/content/tutorials/main.md).\n\n### Create the `package.json` file\n\nFirst, create a directory where your application will live.\n\n```bash\nmkdir myproject\ncd myproject\n```\n\nEnter the following command and answer the questions to create the initial structure for your new project:\n\n```bash\nnpm init\n```\n\nNext, install the driver dependency.\n\n```bash\nnpm install mongodb --save\n```\n\nYou should see **NPM** download a lot of files. Once it's done you'll find all the downloaded packages under the **node_modules** directory.\n\n### Start a MongoDB Server\n\nFor complete MongoDB installation instructions, see [the manual](https://docs.mongodb.org/manual/installation/).\n\n1. Download the right MongoDB version from [MongoDB](https://www.mongodb.org/downloads)\n2. Create a database directory (in this case under **/data**).\n3. Install and start a ``mongod`` process.\n\n```bash\nmongod --dbpath=/data\n```\n\nYou should see the **mongod** process start up and print some status information.\n\n### Connect to MongoDB\n\nCreate a new **app.js** file and add the following code to try out some basic CRUD\noperations using the MongoDB driver.\n\nAdd code to connect to the server and the database **myproject**:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log(\"Connected successfully to server\");\n\n  const db = client.db(dbName);\n\n  client.close();\n});\n```\n\nRun your app from the command line with:\n\n```bash\nnode app.js\n```\n\nThe application should print **Connected successfully to server** to the console.\n\n### Insert a Document\n\nAdd to **app.js** the following function which uses the **insertMany**\nmethod to add three documents to the **documents** collection.  \n\n```js\nconst insertDocuments = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Insert some documents\n  collection.insertMany([\n    {a : 1}, {a : 2}, {a : 3}\n  ], function(err, result) {\n    assert.equal(err, null);\n    assert.equal(3, result.result.n);\n    assert.equal(3, result.ops.length);\n    console.log(\"Inserted 3 documents into the collection\");\n    callback(result);\n  });\n}\n```\n\nThe **insert** command returns an object with the following fields:\n\n* **result** Contains the result document from MongoDB\n* **ops** Contains the documents inserted with added **_id** fields\n* **connection** Contains the connection used to perform the insert\n\nAdd the following code to call the **insertDocuments** function:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log(\"Connected successfully to server\");\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    client.close();\n  });\n});\n```\n\nRun the updated **app.js** file:\n\n```bash\nnode app.js\n```\n\nThe operation returns the following output:\n\n```bash\nConnected successfully to server\nInserted 3 documents into the collection\n```\n\n### Find All Documents\n\nAdd a query that returns all the documents.\n\n```js\nconst findDocuments = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Find some documents\n  collection.find({}).toArray(function(err, docs) {\n    assert.equal(err, null);\n    console.log(\"Found the following records\");\n    console.log(docs)\n    callback(docs);\n  });\n}\n```\n\nThis query returns all the documents in the **documents** collection. Add the **findDocument** method to the **MongoClient.connect** callback:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log(\"Connected correctly to server\");\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    findDocuments(db, function() {\n      client.close();\n    });\n  });\n});\n```\n\n### Find Documents with a Query Filter\n\nAdd a query filter to find only documents which meet the query criteria.\n\n```js\nconst findDocuments = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Find some documents\n  collection.find({'a': 3}).toArray(function(err, docs) {\n    assert.equal(err, null);\n    console.log(\"Found the following records\");\n    console.log(docs);\n    callback(docs);\n  });\n}\n```\n\nOnly the documents which match ``'a' : 3`` should be returned.\n\n### Update a document\n\nThe following operation updates a document in the **documents** collection.\n\n```js\nconst updateDocument = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Update document where a is 2, set b equal to 1\n  collection.updateOne({ a : 2 }\n    , { $set: { b : 1 } }, function(err, result) {\n    assert.equal(err, null);\n    assert.equal(1, result.result.n);\n    console.log(\"Updated the document with the field a equal to 2\");\n    callback(result);\n  });  \n}\n```\n\nThe method updates the first document where the field **a** is equal to **2** by adding a new field **b** to the document set to **1**. Next, update the callback function from **MongoClient.connect** to include the update method.\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log(\"Connected successfully to server\");\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    updateDocument(db, function() {\n      client.close();\n    });\n  });\n});\n```\n\n### Remove a document\n\nRemove the document where the field **a** is equal to **3**.\n\n```js\nconst removeDocument = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Delete document where a is 3\n  collection.deleteOne({ a : 3 }, function(err, result) {\n    assert.equal(err, null);\n    assert.equal(1, result.result.n);\n    console.log(\"Removed the document with the field a equal to 3\");\n    callback(result);\n  });    \n}\n```\n\nAdd the new method to the **MongoClient.connect** callback function.\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log(\"Connected successfully to server\");\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    updateDocument(db, function() {\n      removeDocument(db, function() {\n        client.close();\n      });\n    });\n  });\n});\n```\n\n### Index a Collection\n\n[Indexes](https://docs.mongodb.org/manual/indexes/) can improve your application's\nperformance. The following function creates an index on the **a** field in the\n**documents** collection.\n\n```js\nconst indexCollection = function(db, callback) {\n  db.collection('documents').createIndex(\n    { \"a\": 1 },\n      null,\n      function(err, results) {\n        console.log(results);\n        callback();\n    }\n  );\n};\n```\n\nAdd the ``indexCollection`` method to your app:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log(\"Connected successfully to server\");\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    indexCollection(db, function() {\n      client.close();\n    });\n  });\n});\n```\n\nFor more detailed information, see the [tutorials](docs/reference/content/tutorials/main.md).\n\n## Next Steps\n\n * [MongoDB Documentation](http://mongodb.org)\n * [Read about Schemas](http://learnmongodbthehardway.com)\n * [Star us on GitHub](https://github.com/mongodb/node-mongodb-native)\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "mongodb@3.0.10",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "optionalDependencies": {},
            "_dependencies": {
              "mongodb-core": "3.0.9"
            },
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\mongodb",
            "error": "[Circular]",
            "extraneous": false
          },
          "mongoose-legacy-pluralize": {
            "_from": "mongoose-legacy-pluralize@1.0.2",
            "_id": "mongoose-legacy-pluralize@1.0.2",
            "_integrity": "sha512-Yo/7qQU4/EyIS8YDFSeenIvXxZN+ld7YdV9LqFVQJzTLye8unujAWPZ4NWKfFA+RNjh+wvTWKY9Z3E5XM6ZZiQ==",
            "_location": "/mongoose-legacy-pluralize",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "mongoose-legacy-pluralize@1.0.2",
              "name": "mongoose-legacy-pluralize",
              "escapedName": "mongoose-legacy-pluralize",
              "rawSpec": "1.0.2",
              "saveSpec": "[Circular]",
              "fetchSpec": "1.0.2"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/mongoose-legacy-pluralize/-/mongoose-legacy-pluralize-1.0.2.tgz",
            "_shasum": "3ba9f91fa507b5186d399fb40854bff18fb563e4",
            "_spec": "1.0.2",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Valeri Karpov",
              "email": "val@karpov.io"
            },
            "bugs": {
              "url": "https://github.com/vkarpov15/mongoose-legacy-pluralize/issues"
            },
            "bundleDependencies": false,
            "deprecated": false,
            "description": "Legacy pluralization logic for mongoose",
            "homepage": "https://github.com/vkarpov15/mongoose-legacy-pluralize",
            "keywords": [
              "mongoose",
              "mongodb"
            ],
            "license": "Apache-2.0",
            "main": "index.js",
            "name": "mongoose-legacy-pluralize",
            "peerDependencies": {
              "mongoose": "*"
            },
            "repository": {
              "type": "git",
              "url": "git+https://github.com/vkarpov15/mongoose-legacy-pluralize.git"
            },
            "version": "1.0.2",
            "readme": "# mongoose-legacy-pluralize\nLegacy pluralization logic for mongoose\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "mongoose-legacy-pluralize@1.0.2",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "dependencies": {},
            "devDependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\mongoose-legacy-pluralize",
            "error": "[Circular]",
            "extraneous": false
          },
          "mpath": {
            "_from": "mpath@0.4.1",
            "_id": "mpath@0.4.1",
            "_integrity": "sha512-NNY/MpBkALb9jJmjpBlIi6GRoLveLUM0pJzgbp9vY9F7IQEb/HREC/nxrixechcQwd1NevOhJnWWV8QQQRE+OA==",
            "_location": "/mpath",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "mpath@0.4.1",
              "name": "mpath",
              "escapedName": "mpath",
              "rawSpec": "0.4.1",
              "saveSpec": "[Circular]",
              "fetchSpec": "0.4.1"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/mpath/-/mpath-0.4.1.tgz",
            "_shasum": "ed10388430380bf7bbb5be1391e5d6969cb08e89",
            "_spec": "0.4.1",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Aaron Heckmann",
              "email": "aaron.heckmann+github@gmail.com"
            },
            "bugs": {
              "url": "https://github.com/aheckmann/mpath/issues"
            },
            "bundleDependencies": false,
            "deprecated": false,
            "description": "{G,S}et object values using MongoDB-like path notation",
            "devDependencies": {
              "benchmark": "~1.0.0",
              "mocha": "1.8.1"
            },
            "engines": {
              "node": ">=4.0.0"
            },
            "homepage": "https://github.com/aheckmann/mpath#readme",
            "keywords": [
              "mongodb",
              "path",
              "get",
              "set"
            ],
            "license": "MIT",
            "main": "index.js",
            "name": "mpath",
            "repository": {
              "type": "git",
              "url": "git://github.com/aheckmann/mpath.git"
            },
            "scripts": {
              "test": "mocha test/*"
            },
            "version": "0.4.1",
            "readme": "#mpath\n\n{G,S}et javascript object values using MongoDB-like path notation.\n\n###Getting\n\n```js\nvar mpath = require('mpath');\n\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.get('comments.1.title', obj) // 'exciting!'\n```\n\n`mpath.get` supports array property notation as well.\n\n```js\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.get('comments.title', obj) // ['funny', 'exciting!']\n```\n\nArray property and indexing syntax, when used together, are very powerful.\n\n```js\nvar obj = {\n  array: [\n      { o: { array: [{x: {b: [4,6,8]}}, { y: 10} ] }}\n    , { o: { array: [{x: {b: [1,2,3]}}, { x: {z: 10 }}, { x: 'Turkey Day' }] }}\n    , { o: { array: [{x: {b: null }}, { x: { b: [null, 1]}}] }}\n    , { o: { array: [{x: null }] }}\n    , { o: { array: [{y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ];\n}\n\nvar found = mpath.get('array.o.array.x.b.1', obj);\n\nconsole.log(found); // prints..\n\n    [ [6, undefined]\n    , [2, undefined, undefined]\n    , [null, 1]\n    , [null]\n    , [undefined]\n    , [undefined, undefined, undefined]\n    , undefined\n    ]\n\n```\n\n#####Field selection rules:\n\nThe following rules are iteratively applied to each `segment` in the passed `path`. For example:\n\n```js\nvar path = 'one.two.14'; // path\n'one' // segment 0\n'two' // segment 1\n14    // segment 2\n```\n\n- 1) when value of the segment parent is not an array, return the value of `parent.segment`\n- 2) when value of the segment parent is an array\n  - a) if the segment is an integer, replace the parent array with the value at `parent[segment]`\n  - b) if not an integer, keep the array but replace each array `item` with the value returned from calling `get(remainingSegments, item)` or undefined if falsey.\n\n#####Maps\n\n`mpath.get` also accepts an optional `map` argument which receives each individual found value. The value returned from the `map` function will be used in the original found values place.\n\n```js\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.get('comments.title', obj, function (val) {\n  return 'funny' == val\n    ? 'amusing'\n    : val;\n});\n// ['amusing', 'exciting!']\n```\n\n###Setting\n\n```js\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.1.title', 'hilarious', obj)\nconsole.log(obj.comments[1].title) // 'hilarious'\n```\n\n`mpath.set` supports the same array property notation as `mpath.get`.\n\n```js\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.title', ['hilarious', 'fruity'], obj);\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: 'hilarious' },\n      { title: 'fruity' }\n  ]}\n```\n\nArray property and indexing syntax can be used together also when setting.\n\n```js\nvar obj = {\n  array: [\n      { o: { array: [{x: {b: [4,6,8]}}, { y: 10} ] }}\n    , { o: { array: [{x: {b: [1,2,3]}}, { x: {z: 10 }}, { x: 'Turkey Day' }] }}\n    , { o: { array: [{x: {b: null }}, { x: { b: [null, 1]}}] }}\n    , { o: { array: [{x: null }] }}\n    , { o: { array: [{y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ]\n}\n\nmpath.set('array.1.o', 'this was changed', obj);\n\nconsole.log(require('util').inspect(obj, false, 1000)); // prints..\n\n{\n  array: [\n      { o: { array: [{x: {b: [4,6,8]}}, { y: 10} ] }}\n    , { o: 'this was changed' }\n    , { o: { array: [{x: {b: null }}, { x: { b: [null, 1]}}] }}\n    , { o: { array: [{x: null }] }}\n    , { o: { array: [{y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ];\n}\n\nmpath.set('array.o.array.x', 'this was changed too', obj);\n\nconsole.log(require('util').inspect(obj, false, 1000)); // prints..\n\n{\n  array: [\n      { o: { array: [{x: 'this was changed too'}, { y: 10, x: 'this was changed too'} ] }}\n    , { o: 'this was changed' }\n    , { o: { array: [{x: 'this was changed too'}, { x: 'this was changed too'}] }}\n    , { o: { array: [{x: 'this was changed too'}] }}\n    , { o: { array: [{x: 'this was changed too', y: 3 }] }}\n    , { o: { array: [3, 0, null] }}\n    , { o: { name: 'ha' }}\n  ];\n}\n```\n\n####Setting arrays\n\nBy default, setting a property within an array to another array results in each element of the new array being set to the item in the destination array at the matching index. An example is helpful.\n\n```js\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.title', ['hilarious', 'fruity'], obj);\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: 'hilarious' },\n      { title: 'fruity' }\n  ]}\n```\n\nIf we do not desire this destructuring-like assignment behavior we may instead specify the `$` operator in the path being set to force the array to be copied directly.\n\n```js\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.$.title', ['hilarious', 'fruity'], obj);\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: ['hilarious', 'fruity'] },\n      { title: ['hilarious', 'fruity'] }\n  ]}\n```\n\n####Field assignment rules\n\nThe rules utilized mirror those used on `mpath.get`, meaning we can take values returned from `mpath.get`, update them, and reassign them using `mpath.set`. Note that setting nested arrays of arrays can get unweildy quickly. Check out the [tests](https://github.com/aheckmann/mpath/blob/master/test/index.js) for more extreme examples.\n\n#####Maps\n\n`mpath.set` also accepts an optional `map` argument which receives each individual value being set. The value returned from the `map` function will be used in the original values place.\n\n```js\nvar obj = {\n    comments: [\n      { title: 'funny' },\n      { title: 'exciting!' }\n    ]\n}\n\nmpath.set('comments.title', ['hilarious', 'fruity'], obj, function (val) {\n  return val.length;\n});\n\nconsole.log(obj); // prints..\n\n  { comments: [\n      { title: 9 },\n      { title: 6 }\n  ]}\n```\n\n### Custom object types\n\nSometimes you may want to enact the same functionality on custom object types that store all their real data internally, say for an ODM type object. No fear, `mpath` has you covered. Simply pass the name of the property being used to store the internal data and it will be traversed instead:\n\n```js\nvar mpath = require('mpath');\n\nvar obj = {\n    comments: [\n      { title: 'exciting!', _doc: { title: 'great!' }}\n    ]\n}\n\nmpath.get('comments.0.title', obj, '_doc')            // 'great!'\nmpath.set('comments.0.title', 'nov 3rd', obj, '_doc')\nmpath.get('comments.0.title', obj, '_doc')            // 'nov 3rd'\nmpath.get('comments.0.title', obj)                    // 'exciting'\n```\n\nWhen used with a `map`, the `map` argument comes last.\n\n```js\nmpath.get(path, obj, '_doc', map);\nmpath.set(path, val, obj, '_doc', map);\n```\n\n[LICENSE](https://github.com/aheckmann/mpath/blob/master/LICENSE)\n\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "mpath@0.4.1",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "dependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\mpath",
            "error": "[Circular]",
            "extraneous": false
          },
          "mquery": {
            "_from": "mquery@3.0.0",
            "_id": "mquery@3.0.0",
            "_integrity": "sha512-WL1Lk8v4l8VFSSwN3yCzY9TXw+fKVYKn6f+w86TRzOLSE8k1yTgGaLBPUByJQi8VcLbOdnUneFV/y3Kv874pnQ==",
            "_location": "/mquery",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "mquery@3.0.0",
              "name": "mquery",
              "escapedName": "mquery",
              "rawSpec": "3.0.0",
              "saveSpec": "[Circular]",
              "fetchSpec": "3.0.0"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/mquery/-/mquery-3.0.0.tgz",
            "_shasum": "e5f387dbabc0b9b69859e550e810faabe0ceabb0",
            "_spec": "3.0.0",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Aaron Heckmann",
              "email": "aaron.heckmann+github@gmail.com"
            },
            "bugs": {
              "url": "https://github.com/aheckmann/mquery/issues/new"
            },
            "bundleDependencies": false,
            "dependencies": {
              "bluebird": {
                "_from": "bluebird@3.5.0",
                "_id": "bluebird@3.5.0",
                "_integrity": "sha1-eRQg1/VR7qKJdFOop3ZT+WYG1nw=",
                "_location": "/bluebird",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "bluebird@3.5.0",
                  "name": "bluebird",
                  "escapedName": "bluebird",
                  "rawSpec": "3.5.0",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "3.5.0"
                },
                "_requiredBy": [
                  "/mquery"
                ],
                "_resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.5.0.tgz",
                "_shasum": "791420d7f551eea2897453a8a77653f96606d67c",
                "_spec": "3.5.0",
                "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                "author": {
                  "name": "Petka Antonov",
                  "email": "petka_antonov@hotmail.com",
                  "url": "http://github.com/petkaantonov/"
                },
                "browser": "./js/browser/bluebird.js",
                "bugs": {
                  "url": "http://github.com/petkaantonov/bluebird/issues"
                },
                "bundleDependencies": false,
                "deprecated": false,
                "description": "Full featured Promises/A+ implementation with exceptionally good performance",
                "devDependencies": {
                  "acorn": "~0.6.0",
                  "baconjs": "^0.7.43",
                  "bluebird": "^2.9.2",
                  "body-parser": "^1.10.2",
                  "browserify": "^8.1.1",
                  "cli-table": "~0.3.1",
                  "co": "^4.2.0",
                  "cross-spawn": "^0.2.3",
                  "glob": "^4.3.2",
                  "grunt-saucelabs": "~8.4.1",
                  "highland": "^2.3.0",
                  "istanbul": "^0.3.5",
                  "jshint": "^2.6.0",
                  "jshint-stylish": "~0.2.0",
                  "kefir": "^2.4.1",
                  "mkdirp": "~0.5.0",
                  "mocha": "~2.1",
                  "open": "~0.0.5",
                  "optimist": "~0.6.1",
                  "rimraf": "~2.2.6",
                  "rx": "^2.3.25",
                  "serve-static": "^1.7.1",
                  "sinon": "~1.7.3",
                  "uglify-js": "~2.4.16"
                },
                "files": [
                  "js/browser",
                  "js/release",
                  "LICENSE"
                ],
                "homepage": "https://github.com/petkaantonov/bluebird",
                "keywords": [
                  "promise",
                  "performance",
                  "promises",
                  "promises-a",
                  "promises-aplus",
                  "async",
                  "await",
                  "deferred",
                  "deferreds",
                  "future",
                  "flow control",
                  "dsl",
                  "fluent interface"
                ],
                "license": "MIT",
                "main": "./js/release/bluebird.js",
                "name": "bluebird",
                "repository": {
                  "type": "git",
                  "url": "git://github.com/petkaantonov/bluebird.git"
                },
                "scripts": {
                  "generate-browser-core": "node tools/build.js --features=core --no-debug --release --zalgo --browser --minify && mv js/browser/bluebird.js js/browser/bluebird.core.js && mv js/browser/bluebird.min.js js/browser/bluebird.core.min.js",
                  "generate-browser-full": "node tools/build.js --no-clean --no-debug --release --browser --minify",
                  "istanbul": "istanbul",
                  "lint": "node scripts/jshint.js",
                  "prepublish": "npm run generate-browser-core && npm run generate-browser-full",
                  "test": "node tools/test.js"
                },
                "version": "3.5.0",
                "webpack": "./js/release/bluebird.js",
                "readme": "<a href=\"http://promisesaplus.com/\">\n    <img src=\"http://promisesaplus.com/assets/logo-small.png\" alt=\"Promises/A+ logo\"\n         title=\"Promises/A+ 1.1 compliant\" align=\"right\" />\n</a>\n[![Build Status](https://travis-ci.org/petkaantonov/bluebird.svg?branch=master)](https://travis-ci.org/petkaantonov/bluebird)\n[![coverage-98%](http://img.shields.io/badge/coverage-98%-brightgreen.svg?style=flat)](http://petkaantonov.github.io/bluebird/coverage/debug/index.html)\n\n**Got a question?** Join us on [stackoverflow](http://stackoverflow.com/questions/tagged/bluebird), the [mailing list](https://groups.google.com/forum/#!forum/bluebird-js) or chat on [IRC](https://webchat.freenode.net/?channels=#promises)\n\n# Introduction\n\nBluebird is a fully featured promise library with focus on innovative features and performance\n\nSee the [**bluebird website**](http://bluebirdjs.com/docs/getting-started.html) for further documentation, references and instructions. See the [**API reference**](http://bluebirdjs.com/docs/api-reference.html) here.\n\nFor bluebird 2.x documentation and files, see the [2.x tree](https://github.com/petkaantonov/bluebird/tree/2.x).\n\n# Questions and issues\n\nThe [github issue tracker](https://github.com/petkaantonov/bluebird/issues) is **_only_** for bug reports and feature requests. Anything else, such as questions for help in using the library, should be posted in [StackOverflow](http://stackoverflow.com/questions/tagged/bluebird) under tags `promise` and `bluebird`.\n\n\n\n## Thanks\n\nThanks to BrowserStack for providing us with a free account which lets us support old browsers like IE8. \n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2017 Petka Antonov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n",
                "readmeFilename": "README.md",
                "_args": [
                  [
                    "bluebird@3.5.0",
                    "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                  ]
                ],
                "dependencies": {},
                "optionalDependencies": {},
                "_dependencies": {},
                "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\bluebird",
                "error": "[Circular]",
                "extraneous": false
              },
              "debug": {
                "_from": "debug@~2.6.9",
                "_id": "debug@2.6.9",
                "_integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
                "_location": "/debug",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "debug@2.6.9",
                  "name": "debug",
                  "escapedName": "debug",
                  "rawSpec": "2.6.9",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "2.6.9"
                },
                "_requiredBy": [
                  "/",
                  "/body-parser",
                  "/express",
                  "/finalhandler",
                  "/morgan",
                  "/send"
                ],
                "_resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
                "_shasum": "5d128515df134ff327e90a4c93f4e077a536341f",
                "_spec": "2.6.9",
                "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                "author": {
                  "name": "TJ Holowaychuk",
                  "email": "tj@vision-media.ca"
                },
                "browser": "./src/browser.js",
                "bugs": {
                  "url": "https://github.com/visionmedia/debug/issues"
                },
                "bundleDependencies": false,
                "component": {
                  "scripts": {
                    "debug/index.js": "browser.js",
                    "debug/debug.js": "debug.js"
                  }
                },
                "contributors": [
                  {
                    "name": "Nathan Rajlich",
                    "email": "nathan@tootallnate.net",
                    "url": "http://n8.io"
                  },
                  {
                    "name": "Andrew Rhyne",
                    "email": "rhyneandrew@gmail.com"
                  }
                ],
                "dependencies": {},
                "deprecated": false,
                "description": "small debugging utility",
                "devDependencies": {
                  "browserify": "9.0.3",
                  "chai": "^3.5.0",
                  "concurrently": "^3.1.0",
                  "coveralls": "^2.11.15",
                  "eslint": "^3.12.1",
                  "istanbul": "^0.4.5",
                  "karma": "^1.3.0",
                  "karma-chai": "^0.1.0",
                  "karma-mocha": "^1.3.0",
                  "karma-phantomjs-launcher": "^1.0.2",
                  "karma-sinon": "^1.0.5",
                  "mocha": "^3.2.0",
                  "mocha-lcov-reporter": "^1.2.0",
                  "rimraf": "^2.5.4",
                  "sinon": "^1.17.6",
                  "sinon-chai": "^2.8.0"
                },
                "homepage": "https://github.com/visionmedia/debug#readme",
                "keywords": [
                  "debug",
                  "log",
                  "debugger"
                ],
                "license": "MIT",
                "main": "./src/index.js",
                "name": "debug",
                "repository": {
                  "type": "git",
                  "url": "git://github.com/visionmedia/debug.git"
                },
                "version": "2.6.9",
                "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers) \n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n\n\nA tiny node.js debugging utility modelled after node core's debugging technique.\n\n**Discussion around the V3 API is under way [here](https://github.com/visionmedia/debug/issues/370)**\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample _app.js_:\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample _worker.js_:\n\n```js\nvar debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n```\n\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\n\n  ![debug http and worker](http://f.cl.ly/items/18471z1H402O24072r1J/Screenshot.png)\n\n  ![debug worker](http://f.cl.ly/items/1X413v1a3M0d3C2c1E0i/Screenshot.png)\n\n#### Windows note\n\n On Windows the environment variable is set using the `set` command.\n\n ```cmd\n set DEBUG=*,-not_this\n ```\n\n Note that PowerShell uses different syntax to set environment variables.\n\n ```cmd\n $env:DEBUG = \"*,-not_this\"\n  ```\n\nThen, run the program to be debugged as usual.\n\n## Millisecond diff\n\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n  ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)\n\n  When stdout is not a TTY, `Date#toUTCString()` is used, making it more useful for logging the debug information as shown below:\n\n  ![](http://f.cl.ly/items/112H3i0e0o0P0a2Q2r11/Screenshot.png)\n\n## Conventions\n\n  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".\n\n## Wildcards\n\n  The `*` character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with `DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\n  You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, `DEBUG=*,-connect:*` would include all debuggers except those starting with \"connect:\".\n\n## Environment Variables\n\n  When running through Node.js, you can set a few environment variables that will\n  change the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth. |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n  __Note:__ The environment variables beginning with `DEBUG_` end up being\n  converted into an Options object that gets used with `%o`/`%O` formatters.\n  See the Node.js documentation for\n  [`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\n  for the complete list.\n\n## Formatters\n\n\n  Debug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting. Below are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n### Custom formatters\n\n  You can add custom formatters by extending the `debug.formatters` object. For example, if you wanted to add support for rendering a Buffer as hex with `%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// …elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n## Browser support\n  You can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\n  or just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\n  if you don't want to build it yourself.\n\n  Debug's enable state is currently persisted by `localStorage`.\n  Consider the situation shown below where you have `worker:a` and `worker:b`,\n  and wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n#### Web Inspector Colors\n\n  Colors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\n  option. These are WebKit web inspectors, Firefox ([since version\n  31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\n  and the Firebug plugin for Firefox (any version).\n\n  Colored output looks something like:\n\n  ![](https://cloud.githubusercontent.com/assets/71256/3139768/b98c5fd8-e8ef-11e3-862a-f7253b6f47c6.png)\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample _stdout.js_:\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n \n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                "readmeFilename": "README.md",
                "_args": [
                  [
                    "debug@2.6.9",
                    "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                  ]
                ],
                "optionalDependencies": {},
                "_dependencies": {
                  "ms": "2.0.0"
                },
                "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\debug",
                "error": "[Circular]",
                "extraneous": false,
                "_deduped": "node_modules\\debug"
              },
              "sliced": {
                "_from": "sliced@0.0.5",
                "_id": "sliced@0.0.5",
                "_integrity": "sha1-XtwETKTrb3gW1Qui/GPiXY/kcH8=",
                "_location": "/mquery/sliced",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "sliced@0.0.5",
                  "name": "sliced",
                  "escapedName": "sliced",
                  "rawSpec": "0.0.5",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "0.0.5"
                },
                "_requiredBy": [
                  "/mquery"
                ],
                "_resolved": "https://registry.npmjs.org/sliced/-/sliced-0.0.5.tgz",
                "_shasum": "5edc044ca4eb6f7816d50ba2fc63e25d8fe4707f",
                "_spec": "0.0.5",
                "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                "author": {
                  "name": "Aaron Heckmann",
                  "email": "aaron.heckmann+github@gmail.com"
                },
                "bugs": {
                  "url": "https://github.com/aheckmann/sliced/issues"
                },
                "bundleDependencies": false,
                "deprecated": false,
                "description": "A faster Node.js alternative to Array.prototype.slice.call(arguments)",
                "devDependencies": {
                  "benchmark": "~1.0.0",
                  "mocha": "1.5.0"
                },
                "homepage": "https://github.com/aheckmann/sliced#readme",
                "keywords": [
                  "arguments",
                  "slice",
                  "array"
                ],
                "license": "MIT",
                "main": "index.js",
                "name": "sliced",
                "repository": {
                  "type": "git",
                  "url": "git://github.com/aheckmann/sliced.git"
                },
                "scripts": {
                  "test": "make test"
                },
                "version": "0.0.5",
                "readme": "#sliced\n==========\n\nA faster alternative to `[].slice.call(arguments)`.\n\n[![Build Status](https://secure.travis-ci.org/aheckmann/sliced.png)](http://travis-ci.org/aheckmann/sliced)\n\nExample output from [benchmark.js](https://github.com/bestiejs/benchmark.js)\n\n    Array.prototype.slice.call x 1,320,205 ops/sec ±2.35% (92 runs sampled)\n    [].slice.call x 1,314,605 ops/sec ±1.60% (95 runs sampled)\n    cached slice.call x 10,468,380 ops/sec ±1.45% (95 runs sampled)\n    sliced x 16,608,237 ops/sec ±1.40% (92 runs sampled)\n    fastest is sliced\n\n    Array.prototype.slice.call(arguments, 1) x 1,383,584 ops/sec ±1.73% (97 runs sampled)\n    [].slice.call(arguments, 1) x 1,494,735 ops/sec ±1.33% (95 runs sampled)\n    cached slice.call(arguments, 1) x 10,085,270 ops/sec ±1.51% (97 runs sampled)\n    sliced(arguments, 1) x 16,620,480 ops/sec ±1.29% (95 runs sampled)\n    fastest is sliced(arguments, 1)\n\n    Array.prototype.slice.call(arguments, -1) x 1,303,262 ops/sec ±1.62% (94 runs sampled)\n    [].slice.call(arguments, -1) x 1,325,615 ops/sec ±1.36% (97 runs sampled)\n    cached slice.call(arguments, -1) x 9,673,603 ops/sec ±1.70% (96 runs sampled)\n    sliced(arguments, -1) x 16,384,575 ops/sec ±1.06% (91 runs sampled)\n    fastest is sliced(arguments, -1)\n\n    Array.prototype.slice.call(arguments, -2, -10) x 1,404,390 ops/sec ±1.61% (95 runs sampled)\n    [].slice.call(arguments, -2, -10) x 1,514,367 ops/sec ±1.21% (96 runs sampled)\n    cached slice.call(arguments, -2, -10) x 9,836,017 ops/sec ±1.21% (95 runs sampled)\n    sliced(arguments, -2, -10) x 18,544,882 ops/sec ±1.30% (91 runs sampled)\n    fastest is sliced(arguments, -2, -10)\n\n    Array.prototype.slice.call(arguments, -2, -1) x 1,458,604 ops/sec ±1.41% (97 runs sampled)\n    [].slice.call(arguments, -2, -1) x 1,536,547 ops/sec ±1.63% (99 runs sampled)\n    cached slice.call(arguments, -2, -1) x 10,060,633 ops/sec ±1.37% (96 runs sampled)\n    sliced(arguments, -2, -1) x 18,608,712 ops/sec ±1.08% (93 runs sampled)\n    fastest is sliced(arguments, -2, -1)\n\n_Benchmark  [source](https://github.com/aheckmann/sliced/blob/master/bench.js)._\n\n##Usage\n\n`sliced` accepts the same arguments as `Array#slice` so you can easily swap it out.\n\n```js\nfunction zing () {\n  var slow = [].slice.call(arguments, 1, 8);\n  var args = slice(arguments, 1, 8);\n\n  var slow = Array.prototype.slice.call(arguments);\n  var args = slice(arguments);\n  // etc\n}\n```\n\n## install\n\n    npm install sliced\n\n\n[LICENSE](https://github.com/aheckmann/sliced/blob/master/LICENSE)\n",
                "readmeFilename": "README.md",
                "_args": [
                  [
                    "sliced@0.0.5",
                    "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                  ]
                ],
                "dependencies": {},
                "optionalDependencies": {},
                "_dependencies": {},
                "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\mquery\\node_modules\\sliced",
                "error": "[Circular]",
                "extraneous": false
              },
              "regexp-clone": {
                "_from": "regexp-clone@0.0.1",
                "_id": "regexp-clone@0.0.1",
                "_integrity": "sha1-p8LgmJH9vzj7sQ03b7cwA+aKxYk=",
                "_location": "/regexp-clone",
                "_phantomChildren": {},
                "_requested": {
                  "type": "version",
                  "registry": true,
                  "raw": "regexp-clone@0.0.1",
                  "name": "regexp-clone",
                  "escapedName": "regexp-clone",
                  "rawSpec": "0.0.1",
                  "saveSpec": "[Circular]",
                  "fetchSpec": "0.0.1"
                },
                "_requiredBy": [
                  "/mongoose",
                  "/mquery"
                ],
                "_resolved": "https://registry.npmjs.org/regexp-clone/-/regexp-clone-0.0.1.tgz",
                "_shasum": "a7c2e09891fdbf38fbb10d376fb73003e68ac589",
                "_spec": "0.0.1",
                "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
                "author": {
                  "name": "Aaron Heckmann",
                  "email": "aaron.heckmann+github@gmail.com"
                },
                "bugs": {
                  "url": "https://github.com/aheckmann/regexp-clone/issues"
                },
                "bundleDependencies": false,
                "deprecated": false,
                "description": "Clone RegExps with options",
                "devDependencies": {
                  "mocha": "1.8.1"
                },
                "homepage": "https://github.com/aheckmann/regexp-clone#readme",
                "keywords": [
                  "RegExp",
                  "clone"
                ],
                "license": "MIT",
                "main": "index.js",
                "name": "regexp-clone",
                "repository": {
                  "type": "git",
                  "url": "git://github.com/aheckmann/regexp-clone.git"
                },
                "scripts": {
                  "test": "make test"
                },
                "version": "0.0.1",
                "readme": "#regexp-clone\n==============\n\nClones RegExps with flag preservation\n\n```js\nvar regexpClone = require('regexp-clone');\n\nvar a = /somethin/g;\nconsole.log(a.global); // true\n\nvar b = regexpClone(a);\nconsole.log(b.global); // true\n```\n\n## License\n\n[MIT](https://github.com/aheckmann/regexp-clone/blob/master/LICENSE)\n",
                "readmeFilename": "README.md",
                "_args": [
                  [
                    "regexp-clone@0.0.1",
                    "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
                  ]
                ],
                "dependencies": {},
                "optionalDependencies": {},
                "_dependencies": {},
                "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\regexp-clone",
                "error": "[Circular]",
                "extraneous": false,
                "_deduped": "node_modules\\regexp-clone"
              }
            },
            "deprecated": false,
            "description": "Expressive query building for MongoDB",
            "devDependencies": {
              "istanbul": "^0.4.5",
              "mocha": "3.2.0",
              "mongodb": "~2.2",
              "nsp": "^2.8.1"
            },
            "homepage": "https://github.com/aheckmann/mquery/",
            "keywords": [
              "mongodb",
              "query",
              "builder"
            ],
            "license": "MIT",
            "main": "lib/mquery.js",
            "name": "mquery",
            "repository": {
              "type": "git",
              "url": "git://github.com/aheckmann/mquery.git"
            },
            "scripts": {
              "test": "nsp check && mocha test/index.js test/*.test.js"
            },
            "version": "3.0.0",
            "readme": "# mquery\n\n`mquery` is a fluent mongodb query builder designed to run in multiple environments.\n\n## Features\n\n  - fluent query builder api\n  - custom base query support\n  - MongoDB 2.4 geoJSON support\n  - method + option combinations validation\n  - node.js driver compatibility\n  - environment detection\n  - [debug](https://github.com/visionmedia/debug) support\n  - separated collection implementations for maximum flexibility\n\n[![Build Status](https://travis-ci.org/aheckmann/mquery.png)](https://travis-ci.org/aheckmann/mquery)\n\n## Use\n\n```js\nrequire('mongodb').connect(uri, function (err, db) {\n  if (err) return handleError(err);\n\n  // get a collection\n  var collection = db.collection('artists');\n\n  // pass it to the constructor\n  mquery(collection).find({..}, callback);\n\n  // or pass it to the collection method\n  mquery().find({..}).collection(collection).exec(callback)\n\n  // or better yet, create a custom query constructor that has it always set\n  var Artist = mquery(collection).toConstructor();\n  Artist().find(..).where(..).exec(callback)\n})\n```\n\n`mquery` requires a collection object to work with. In the example above we just pass the collection object created using the official [MongoDB driver](https://github.com/mongodb/node-mongodb-native).\n\n\n## Fluent API\n\n- [find](#find)\n- [findOne](#findOne)\n- [count](#count)\n- [remove](#remove)\n- [update](#update)\n- [findOneAndUpdate](#findoneandupdate)\n- [findOneAndRemove](#findoneandremove)\n- [distinct](#distinct)\n- [exec](#exec)\n- [stream](#stream)\n- [all](#all)\n- [and](#and)\n- [box](#box)\n- [circle](#circle)\n- [elemMatch](#elemmatch)\n- [equals](#equals)\n- [exists](#exists)\n- [geometry](#geometry)\n- [gt](#gt)\n- [gte](#gte)\n- [in](#in)\n- [intersects](#intersects)\n- [lt](#lt)\n- [lte](#lte)\n- [maxDistance](#maxdistance)\n- [mod](#mod)\n- [ne](#ne)\n- [nin](#nin)\n- [nor](#nor)\n- [near](#near)\n- [or](#or)\n- [polygon](#polygon)\n- [regex](#regex)\n- [select](#select)\n- [selected](#selected)\n- [selectedInclusively](#selectedinclusively)\n- [selectedExclusively](#selectedexclusively)\n- [size](#size)\n- [slice](#slice)\n- [within](#within)\n- [where](#where)\n- [$where](#where-1)\n- [batchSize](#batchsize)\n- [comment](#comment)\n- [hint](#hint)\n- [limit](#limit)\n- [maxScan](#maxscan)\n- [maxTime](#maxtime)\n- [skip](#skip)\n- [sort](#sort)\n- [read](#read)\n- [slaveOk](#slaveok)\n- [snapshot](#snapshot)\n- [tailable](#tailable)\n\n## Helpers\n\n- [collection](#collection)\n- [then](#then)\n- [thunk](#thunk)\n- [merge](#mergeobject)\n- [setOptions](#setoptionsoptions)\n- [setTraceFunction](#settracefunctionfunc)\n- [mquery.setGlobalTraceFunction](#mquerysetglobaltracefunctionfunc)\n- [mquery.canMerge](#mquerycanmerge)\n- [mquery.use$geoWithin](#mqueryusegeowithin)\n\n### find()\n\nDeclares this query a _find_ query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.\n\n```js\nmquery().find()\nmquery().find(match)\nmquery().find(callback)\nmquery().find(match, function (err, docs) {\n  assert(Array.isArray(docs));\n})\n```\n\n### findOne()\n\nDeclares this query a _findOne_ query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.\n\n```js\nmquery().findOne()\nmquery().findOne(match)\nmquery().findOne(callback)\nmquery().findOne(match, function (err, doc) {\n  if (doc) {\n    // the document may not be found\n    console.log(doc);\n  }\n})\n```\n\n### count()\n\nDeclares this query a _count_ query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.\n\n```js\nmquery().count()\nmquery().count(match)\nmquery().count(callback)\nmquery().count(match, function (err, number){\n  console.log('we found %d matching documents', number);\n})\n```\n\n### remove()\n\nDeclares this query a _remove_ query. Optionally pass a match clause and / or callback. If a callback is passed the query is executed.\n\n```js\nmquery().remove()\nmquery().remove(match)\nmquery().remove(callback)\nmquery().remove(match, function (err){})\n```\n\n### update()\n\nDeclares this query an _update_ query. Optionally pass an update document, match clause, options or callback. If a callback is passed, the query is executed. To force execution without passing a callback, run `update(true)`.\n\n```js\nmquery().update()\nmquery().update(match, updateDocument)\nmquery().update(match, updateDocument, options)\n\n// the following all execute the command\nmquery().update(callback)\nmquery().update({$set: updateDocument, callback)\nmquery().update(match, updateDocument, callback)\nmquery().update(match, updateDocument, options, function (err, result){})\nmquery().update(true) // executes (unsafe write)\n```\n\n##### the update document\n\nAll paths passed that are not `$atomic` operations will become `$set` ops. For example:\n\n```js\nmquery(collection).where({ _id: id }).update({ title: 'words' }, callback)\n```\n\nbecomes\n\n```js\ncollection.update({ _id: id }, { $set: { title: 'words' }}, callback)\n```\n\nThis behavior can be overridden using the `overwrite` option (see below).\n\n##### options\n\nOptions are passed to the `setOptions()` method.\n\n- overwrite\n\nPassing an empty object `{ }` as the update document will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option, the update operation will be ignored and the callback executed without sending the command to MongoDB to prevent accidently overwritting documents in the collection.\n\n```js\nvar q = mquery(collection).where({ _id: id }).setOptions({ overwrite: true });\nq.update({ }, callback); // overwrite with an empty doc\n```\n\nThe `overwrite` option isn't just for empty objects, it also provides a means to override the default `$set` conversion and send the update document as is.\n\n```js\n// create a base query\nvar base = mquery({ _id: 108 }).collection(collection).toConstructor();\n\nbase().findOne(function (err, doc) {\n  console.log(doc); // { _id: 108, name: 'cajon' })\n\n  base().setOptions({ overwrite: true }).update({ changed: true }, function (err) {\n    base.findOne(function (err, doc) {\n      console.log(doc); // { _id: 108, changed: true }) - the doc was overwritten\n    });\n  });\n})\n```\n\n- multi\n\nUpdates only modify a single document by default. To update multiple documents, set the `multi` option to `true`.\n\n```js\nmquery()\n  .collection(coll)\n  .update({ name: /^match/ }, { $addToSet: { arr: 4 }}, { multi: true }, callback)\n\n// another way of doing it\nmquery({ name: /^match/ })\n  .collection(coll)\n  .setOptions({ multi: true })\n  .update({ $addToSet: { arr: 4 }}, callback)\n\n// update multiple documents with an empty doc\nvar q = mquery(collection).where({ name: /^match/ });\nq.setOptions({ multi: true, overwrite: true })\nq.update({ });\nq.update(function (err, result) {\n  console.log(arguments);\n});\n```\n\n### findOneAndUpdate()\n\nDeclares this query a _findAndModify_ with update query. Optionally pass a match clause, update document, options, or callback. If a callback is passed, the query is executed.\n\nWhen executed, the first matching document (if found) is modified according to the update document and passed back to the callback.\n\n##### options\n\nOptions are passed to the `setOptions()` method.\n\n- `new`: boolean - true to return the modified document rather than the original. defaults to true\n- `upsert`: boolean - creates the object if it doesn't exist. defaults to false\n- `sort`: if multiple docs are found by the match condition, sets the sort order to choose which doc to update\n\n```js\nquery.findOneAndUpdate()\nquery.findOneAndUpdate(updateDocument)\nquery.findOneAndUpdate(match, updateDocument)\nquery.findOneAndUpdate(match, updateDocument, options)\n\n// the following all execute the command\nquery.findOneAndUpdate(callback)\nquery.findOneAndUpdate(updateDocument, callback)\nquery.findOneAndUpdate(match, updateDocument, callback)\nquery.findOneAndUpdate(match, updateDocument, options, function (err, doc) {\n  if (doc) {\n    // the document may not be found\n    console.log(doc);\n  }\n})\n ```\n\n### findOneAndRemove()\n\nDeclares this query a _findAndModify_ with remove query. Optionally pass a match clause, options, or callback. If a callback is passed, the query is executed.\n\nWhen executed, the first matching document (if found) is modified according to the update document, removed from the collection and passed to the callback.\n\n##### options\n\nOptions are passed to the `setOptions()` method.\n\n- `sort`: if multiple docs are found by the condition, sets the sort order to choose which doc to modify and remove\n\n```js\nA.where().findOneAndRemove()\nA.where().findOneAndRemove(match)\nA.where().findOneAndRemove(match, options)\n\n// the following all execute the command\nA.where().findOneAndRemove(callback)\nA.where().findOneAndRemove(match, callback)\nA.where().findOneAndRemove(match, options, function (err, doc) {\n  if (doc) {\n    // the document may not be found\n    console.log(doc);\n  }\n})\n ```\n\n### distinct()\n\nDeclares this query a _distinct_ query. Optionally pass the distinct field, a match clause or callback. If a callback is passed the query is executed.\n\n```js\nmquery().distinct()\nmquery().distinct(match)\nmquery().distinct(match, field)\nmquery().distinct(field)\n\n// the following all execute the command\nmquery().distinct(callback)\nmquery().distinct(field, callback)\nmquery().distinct(match, callback)\nmquery().distinct(match, field, function (err, result) {\n  console.log(result);\n})\n```\n\n### exec()\n\nExecutes the query.\n\n```js\nmquery().findOne().where('route').intersects(polygon).exec(function (err, docs){})\n```\n\n### stream()\n\nExecutes the query and returns a stream.\n\n```js\nvar stream = mquery().find().stream(options);\nstream.on('data', cb);\nstream.on('close', fn);\n```\n\nNote: this only works with `find()` operations.\n\nNote: returns the stream object directly from the node-mongodb-native driver. (currently streams1 type stream). Any options will be passed along to the [driver method](http://mongodb.github.io/node-mongodb-native/api-generated/cursor.html#stream).\n\n-------------\n\n### all()\n\nSpecifies an `$all` query condition\n\n```js\nmquery().where('permission').all(['read', 'write'])\n```\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/operator/all/)\n\n### and()\n\nSpecifies arguments for an `$and` condition\n\n```js\nmquery().and([{ color: 'green' }, { status: 'ok' }])\n```\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/operator/and/)\n\n### box()\n\nSpecifies a `$box` condition\n\n```js\nvar lowerLeft = [40.73083, -73.99756]\nvar upperRight= [40.741404,  -73.988135]\n\nmquery().where('location').within().box(lowerLeft, upperRight)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/box/)\n\n### circle()\n\nSpecifies a `$center` or `$centerSphere` condition.\n\n```js\nvar area = { center: [50, 50], radius: 10, unique: true }\nquery.where('loc').within().circle(area)\nquery.circle('loc', area);\n\n// for spherical calculations\nvar area = { center: [50, 50], radius: 10, unique: true, spherical: true }\nquery.where('loc').within().circle(area)\nquery.circle('loc', area);\n```\n\n- [MongoDB Documentation - center](http://docs.mongodb.org/manual/reference/operator/center/)\n- [MongoDB Documentation - centerSphere](http://docs.mongodb.org/manual/reference/operator/centerSphere/)\n\n### elemMatch()\n\nSpecifies an `$elemMatch` condition\n\n```js\nquery.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})\n\nquery.elemMatch('comment', function (elem) {\n  elem.where('author').equals('autobot');\n  elem.where('votes').gte(5);\n})\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/elemMatch/)\n\n### equals()\n\nSpecifies the complementary comparison value for the path specified with `where()`.\n\n```js\nmquery().where('age').equals(49);\n\n// is the same as\n\nmquery().where({ 'age': 49 });\n```\n\n### exists()\n\nSpecifies an `$exists` condition\n\n```js\n// { name: { $exists: true }}\nmquery().where('name').exists()\nmquery().where('name').exists(true)\nmquery().exists('name')\n\n// { name: { $exists: false }}\nmquery().where('name').exists(false);\nmquery().exists('name', false);\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/exists/)\n\n### geometry()\n\nSpecifies a `$geometry` condition\n\n```js\nvar polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]\nquery.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })\n\n// or\nvar polyB = [[ 0, 0 ], [ 1, 1 ]]\nquery.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })\n\n// or\nvar polyC = [ 0, 0 ]\nquery.where('loc').within().geometry({ type: 'Point', coordinates: polyC })\n\n// or\nquery.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })\n\n// or\nquery.where('loc').near().geometry({ type: 'Point', coordinates: [3,5] })\n```\n\n`geometry()` **must** come after `intersects()`, `within()`, or `near()`.\n\nThe `object` argument must contain `type` and `coordinates` properties.\n\n- type `String`\n- coordinates `Array`\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/geometry/)\n\n### gt()\n\nSpecifies a `$gt` query condition.\n\n```js\nmquery().where('clicks').gt(999)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/gt/)\n\n### gte()\n\nSpecifies a `$gte` query condition.\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/gte/)\n\n```js\nmquery().where('clicks').gte(1000)\n```\n\n### in()\n\nSpecifies an `$in` query condition.\n\n```js\nmquery().where('author_id').in([3, 48901, 761])\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/in/)\n\n### intersects()\n\nDeclares an `$geoIntersects` query for `geometry()`.\n\n```js\nquery.where('path').intersects().geometry({\n    type: 'LineString'\n  , coordinates: [[180.0, 11.0], [180, 9.0]]\n})\n\n// geometry arguments are supported\nquery.where('path').intersects({\n    type: 'LineString'\n  , coordinates: [[180.0, 11.0], [180, 9.0]]\n})\n```\n\n**Must** be used after `where()`.\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/geoIntersects/)\n\n### lt()\n\nSpecifies a `$lt` query condition.\n\n```js\nmquery().where('clicks').lt(50)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/lt/)\n\n### lte()\n\nSpecifies a `$lte` query condition.\n\n```js\nmquery().where('clicks').lte(49)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/lte/)\n\n### maxDistance()\n\nSpecifies a `$maxDistance` query condition.\n\n```js\nmquery().where('location').near({ center: [139, 74.3] }).maxDistance(5)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/maxDistance/)\n\n### mod()\n\nSpecifies a `$mod` condition\n\n```js\nmquery().where('count').mod(2, 0)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/mod/)\n\n### ne()\n\nSpecifies a `$ne` query condition.\n\n```js\nmquery().where('status').ne('ok')\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/ne/)\n\n### nin()\n\nSpecifies an `$nin` query condition.\n\n```js\nmquery().where('author_id').nin([3, 48901, 761])\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/nin/)\n\n### nor()\n\nSpecifies arguments for an `$nor` condition.\n\n```js\nmquery().nor([{ color: 'green' }, { status: 'ok' }])\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/nor/)\n\n### near()\n\nSpecifies arguments for a `$near` or `$nearSphere` condition.\n\nThese operators return documents sorted by distance.\n\n#### Example\n\n```js\nquery.where('loc').near({ center: [10, 10] });\nquery.where('loc').near({ center: [10, 10], maxDistance: 5 });\nquery.near('loc', { center: [10, 10], maxDistance: 5 });\n\n// GeoJSON\nquery.where('loc').near({ center: { type: 'Point', coordinates: [10, 10] }});\nquery.where('loc').near({ center: { type: 'Point', coordinates: [10, 10] }, maxDistance: 5, spherical: true });\nquery.where('loc').near().geometry({ type: 'Point', coordinates: [10, 10] });\n\n// For a $nearSphere condition, pass the `spherical` option.\nquery.near({ center: [10, 10], maxDistance: 5, spherical: true });\n```\n\n[MongoDB Documentation](http://www.mongodb.org/display/DOCS/Geospatial+Indexing)\n\n### or()\n\nSpecifies arguments for an `$or` condition.\n\n```js\nmquery().or([{ color: 'red' }, { status: 'emergency' }])\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/or/)\n\n### polygon()\n\nSpecifies a `$polygon` condition\n\n```js\nmquery().where('loc').within().polygon([10,20], [13, 25], [7,15])\nmquery().polygon('loc', [10,20], [13, 25], [7,15])\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/polygon/)\n\n### regex()\n\nSpecifies a `$regex` query condition.\n\n```js\nmquery().where('name').regex(/^sixstepsrecords/)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/regex/)\n\n### select()\n\nSpecifies which document fields to include or exclude\n\n```js\n// 1 means include, 0 means exclude\nmquery().select({ name: 1, address: 1, _id: 0 })\n\n// or\n\nmquery().select('name address -_id')\n```\n\n##### String syntax\n\nWhen passing a string, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included.\n\n```js\n// include a and b, exclude c\nquery.select('a b -c');\n\n// or you may use object notation, useful when\n// you have keys already prefixed with a \"-\"\nquery.select({a: 1, b: 1, c: 0});\n```\n\n_Cannot be used with `distinct()`._\n\n### selected()\n\nDetermines if the query has selected any fields.\n\n```js\nvar query = mquery();\nquery.selected() // false\nquery.select('-name');\nquery.selected() // true\n```\n\n### selectedInclusively()\n\nDetermines if the query has selected any fields inclusively.\n\n```js\nvar query = mquery().select('name');\nquery.selectedInclusively() // true\n\nvar query = mquery();\nquery.selected() // false\nquery.select('-name');\nquery.selectedInclusively() // false\nquery.selectedExclusively() // true\n```\n\n### selectedExclusively()\n\nDetermines if the query has selected any fields exclusively.\n\n```js\nvar query = mquery().select('-name');\nquery.selectedExclusively() // true\n\nvar query = mquery();\nquery.selected() // false\nquery.select('name');\nquery.selectedExclusively() // false\nquery.selectedInclusively() // true\n```\n\n### size()\n\nSpecifies a `$size` query condition.\n\n```js\nmquery().where('someArray').size(6)\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/size/)\n\n### slice()\n\nSpecifies a `$slice` projection for a `path`\n\n```js\nmquery().where('comments').slice(5)\nmquery().where('comments').slice(-5)\nmquery().where('comments').slice([-10, 5])\n```\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/projection/slice/)\n\n### within()\n\nSets a `$geoWithin` or `$within` argument for geo-spatial queries.\n\n```js\nmquery().within().box()\nmquery().within().circle()\nmquery().within().geometry()\n\nmquery().where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });\nmquery().where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });\nmquery().where('loc').within({ polygon: [[],[],[],[]] });\n\nmquery().where('loc').within([], [], []) // polygon\nmquery().where('loc').within([], []) // box\nmquery().where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry\n```\n\nAs of mquery 2.0, `$geoWithin` is used by default. This impacts you if running MongoDB < 2.4. To alter this behavior, see [mquery.use$geoWithin](#mqueryusegeowithin).\n\n**Must** be used after `where()`.\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/reference/operator/geoWithin/)\n\n### where()\n\nSpecifies a `path` for use with chaining\n\n```js\n// instead of writing:\nmquery().find({age: {$gte: 21, $lte: 65}});\n\n// we can instead write:\nmquery().where('age').gte(21).lte(65);\n\n// passing query conditions is permitted too\nmquery().find().where({ name: 'vonderful' })\n\n// chaining\nmquery()\n.where('age').gte(21).lte(65)\n.where({ 'name': /^vonderful/i })\n.where('friends').slice(10)\n.exec(callback)\n```\n\n### $where()\n\nSpecifies a `$where` condition.\n\nUse `$where` when you need to select documents using a JavaScript expression.\n\n```js\nquery.$where('this.comments.length > 10 || this.name.length > 5').exec(callback)\n\nquery.$where(function () {\n  return this.comments.length > 10 || this.name.length > 5;\n})\n```\n\nOnly use `$where` when you have a condition that cannot be met using other MongoDB operators like `$lt`. Be sure to read about all of [its caveats](http://docs.mongodb.org/manual/reference/operator/where/) before using.\n\n-----------\n\n### batchSize()\n\nSpecifies the batchSize option.\n\n```js\nquery.batchSize(100)\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/method/cursor.batchSize/)\n\n### comment()\n\nSpecifies the comment option.\n\n```js\nquery.comment('login query');\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/operator/)\n\n### hint()\n\nSets query hints.\n\n```js\nmquery().hint({ indexA: 1, indexB: -1 })\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/operator/hint/)\n\n### limit()\n\nSpecifies the limit option.\n\n```js\nquery.limit(20)\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/method/cursor.limit/)\n\n### maxScan()\n\nSpecifies the maxScan option.\n\n```js\nquery.maxScan(100)\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/operator/maxScan/)\n\n### maxTime()\n\nSpecifies the maxTimeMS option.\n\n```js\nquery.maxTime(100)\n```\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/method/cursor.maxTimeMS/)\n\n\n### skip()\n\nSpecifies the skip option.\n\n```js\nquery.skip(100).limit(20)\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/method/cursor.skip/)\n\n### sort()\n\nSets the query sort order.\n\nIf an object is passed, key values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`.\n\nIf a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n\n```js\n// these are equivalent\nquery.sort({ field: 'asc', test: -1 });\nquery.sort('field -test');\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/method/cursor.sort/)\n\n### read()\n\nSets the readPreference option for the query.\n\n```js\nmquery().read('primary')\nmquery().read('p')  // same as primary\n\nmquery().read('primaryPreferred')\nmquery().read('pp') // same as primaryPreferred\n\nmquery().read('secondary')\nmquery().read('s')  // same as secondary\n\nmquery().read('secondaryPreferred')\nmquery().read('sp') // same as secondaryPreferred\n\nmquery().read('nearest')\nmquery().read('n')  // same as nearest\n```\n\n##### Preferences:\n\n- `primary` - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags.\n- `secondary` - Read from secondary if available, otherwise error.\n- `primaryPreferred` - Read from primary if available, otherwise a secondary.\n- `secondaryPreferred` - Read from a secondary if available, otherwise read from the primary.\n- `nearest` - All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection.\n\nAliases\n\n- `p`   primary\n- `pp`  primaryPreferred\n- `s`   secondary\n- `sp`  secondaryPreferred\n- `n`   nearest\n\n##### Preference Tags:\n\nTo keep the separation of concerns between `mquery` and your driver\nclean, `mquery#read()` no longer handles specifying a second `tags` argument as of version 0.5.\nIf you need to specify tags, pass any non-string argument as the first argument.\n`mquery` will pass this argument untouched to your collections methods later.\nFor example:\n\n```js\n// example of specifying tags using the Node.js driver\nvar ReadPref = require('mongodb').ReadPreference;\nvar preference = new ReadPref('secondary', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }]);\nmquery(..).read(preference).exec();\n```\n\nRead more about how to use read preferences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences).\n\n### slaveOk()\n\nSets the slaveOk option. `true` allows reading from secondaries.\n\n**deprecated** use [read()](#read) preferences instead if on mongodb >= 2.2\n\n```js\nquery.slaveOk() // true\nquery.slaveOk(true)\nquery.slaveOk(false)\n```\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/method/rs.slaveOk/)\n\n### snapshot()\n\nSpecifies this query as a snapshot query.\n\n```js\nmquery().snapshot() // true\nmquery().snapshot(true)\nmquery().snapshot(false)\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB documentation](http://docs.mongodb.org/manual/reference/operator/snapshot/)\n\n### tailable()\n\nSets tailable option.\n\n```js\nmquery().tailable() <== true\nmquery().tailable(true)\nmquery().tailable(false)\n```\n\n_Cannot be used with `distinct()`._\n\n[MongoDB Documentation](http://docs.mongodb.org/manual/tutorial/create-tailable-cursor/)\n\n## Helpers\n\n### collection()\n\nSets the querys collection.\n\n```js\nmquery().collection(aCollection)\n```\n\n### then()\n\nExecutes the query and returns a promise which will be resolved with the query results or rejected if the query responds with an error.\n\n```js\nmquery().find(..).then(success, error);\n```\n\nThis is very useful when combined with [co](https://github.com/visionmedia/co) or [koa](https://github.com/koajs/koa), which automatically resolve promise-like objects for you.\n\n```js\nco(function*(){\n  var doc = yield mquery().findOne({ _id: 499 });\n  console.log(doc); // { _id: 499, name: 'amazing', .. }\n})();\n```\n\n_NOTE_:\nThe returned promise is a [bluebird](https://github.com/petkaantonov/bluebird/) promise but this is customizable. If you want to\nuse your favorite promise library, simply set `mquery.Promise = YourPromiseConstructor`.\nYour `Promise` must be [promises A+](http://promisesaplus.com/) compliant.\n\n### thunk()\n\nReturns a thunk which when called runs the query's `exec` method passing the results to the callback.\n\n```js\nvar thunk = mquery(collection).find({..}).thunk();\n\nthunk(function(err, results) {\n\n})\n```\n\n### merge(object)\n\nMerges other mquery or match condition objects into this one. When an mquery instance is passed, its match conditions, field selection and options are merged.\n\n```js\nvar drum = mquery({ type: 'drum' }).collection(instruments);\nvar redDrum = mquery({ color: 'red' }).merge(drum);\nredDrum.count(function (err, n) {\n  console.log('there are %d red drums', n);\n})\n```\n\nInternally uses `mquery.canMerge` to determine validity.\n\n### setOptions(options)\n\nSets query options.\n\n```js\nmquery().setOptions({ collection: coll, limit: 20 })\n```\n\n##### options\n\n- [tailable](#tailable) *\n- [sort](#sort) *\n- [limit](#limit) *\n- [skip](#skip) *\n- [maxScan](#maxscan) *\n- [maxTime](#maxtime) *\n- [batchSize](#batchSize) *\n- [comment](#comment) *\n- [snapshot](#snapshot) *\n- [hint](#hint) *\n- [slaveOk](#slaveOk) *\n- [safe](http://docs.mongodb.org/manual/reference/write-concern/): Boolean - passed through to the collection. Setting to `true` is equivalent to `{ w: 1 }`\n- [collection](#collection): the collection to query against\n\n_* denotes a query helper method is also available_\n\n### setTraceFunction(func)\n\nSet a function to trace this query. Useful for profiling or logging.\n\n```js\nfunction traceFunction (method, queryInfo, query) {\n  console.log('starting ' + method + ' query');\n\n  return function (err, result, millis) {\n    console.log('finished ' + method + ' query in ' + millis + 'ms');\n  };\n}\n\nmquery().setTraceFunction(traceFunction).findOne({name: 'Joe'}, cb);\n```\n\nThe trace function is passed (method, queryInfo, query)\n\n- method is the name of the method being called (e.g. findOne)\n- queryInfo contains information about the query:\n - conditions: query conditions/criteria\n - options: options such as sort, fields, etc\n - doc: document being updated\n- query is the query object\n\nThe trace function should return a callback function which accepts:\n- err: error, if any\n- result: result, if any\n- millis: time spent waiting for query result\n\nNOTE: stream requests are not traced.\n\n### mquery.setGlobalTraceFunction(func)\n\nSimilar to `setTraceFunction()` but automatically applied to all queries.\n\n```js\nmquery.setTraceFunction(traceFunction);\n```\n\n### mquery.canMerge(conditions)\n\nDetermines if `conditions` can be merged using `mquery().merge()`.\n\n```js\nvar query = mquery({ type: 'drum' });\nvar okToMerge = mquery.canMerge(anObject)\nif (okToMerge) {\n  query.merge(anObject);\n}\n```\n\n## mquery.use$geoWithin\n\nMongoDB 2.4 introduced the `$geoWithin` operator which replaces and is 100% backward compatible with `$within`. As of mquery 0.2, we default to using `$geoWithin` for all `within()` calls.\n\nIf you are running MongoDB < 2.4 this will be problematic. To force `mquery` to be backward compatible and always use `$within`, set the `mquery.use$geoWithin` flag to `false`.\n\n```js\nmquery.use$geoWithin = false;\n```\n\n## Custom Base Queries\n\nOften times we want custom base queries that encapsulate predefined criteria. With `mquery` this is easy. First create the query you want to reuse and call its `toConstructor()` method which returns a new subclass of `mquery` that retains all options and criteria of the original.\n\n```js\nvar greatMovies = mquery(movieCollection).where('rating').gte(4.5).toConstructor();\n\n// use it!\ngreatMovies().count(function (err, n) {\n  console.log('There are %d great movies', n);\n});\n\ngreatMovies().where({ name: /^Life/ }).select('name').find(function (err, docs) {\n  console.log(docs);\n});\n```\n\n## Validation\n\nMethod and options combinations are checked for validity at runtime to prevent creation of invalid query constructs. For example, a `distinct` query does not support specifying options like `hint` or field selection. In this case an error will be thrown so you can catch these mistakes in development.\n\n## Debug support\n\nDebug mode is provided through the use of the [debug](https://github.com/visionmedia/debug) module. To enable:\n\n    DEBUG=mquery node yourprogram.js\n\nRead the debug module documentation for more details.\n\n## General compatibility\n\n#### ObjectIds\n\n`mquery` clones query arguments before passing them to a `collection` method for execution.\nThis prevents accidental side-affects to the objects you pass.\nTo clone `ObjectIds` we need to make some assumptions.\n\nFirst, to check if an object is an `ObjectId`, we check its constructors name. If it matches either\n`ObjectId` or `ObjectID` we clone it.\n\nTo clone `ObjectIds`, we call its optional `clone` method. If a `clone` method does not exist, we fall\nback to calling `new obj.constructor(obj.id)`. We assume, for compatibility with the\nNode.js driver, that the `ObjectId` instance has a public `id` property and that\nwhen creating an `ObjectId` instance we can pass that `id` as an argument.\n\n#### Read Preferences\n\n`mquery` supports specifying [Read Preferences]() to control from which MongoDB node your query will read.\nThe Read Preferences spec also support specifying tags. To pass tags, some\ndrivers (Node.js driver) require passing a special constructor that handles both the read preference and its tags.\nIf you need to specify tags, pass an instance of your drivers ReadPreference constructor or roll your own. `mquery` will store whatever you provide and pass later to your collection during execution.\n\n## Future goals\n\n  - mongo shell compatibility\n  - browser compatibility\n\n## Installation\n\n    $ npm install mquery\n\n## License\n\n[MIT](https://github.com/aheckmann/mquery/blob/master/LICENSE)\n\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "mquery@3.0.0",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "optionalDependencies": {},
            "_dependencies": {
              "bluebird": "3.5.0",
              "debug": "2.6.9",
              "regexp-clone": "0.0.1",
              "sliced": "0.0.5"
            },
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\mquery",
            "error": "[Circular]",
            "extraneous": false
          },
          "ms": {
            "_from": "ms@2.0.0",
            "_id": "ms@2.0.0",
            "_integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
            "_location": "/ms",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "ms@2.0.0",
              "name": "ms",
              "escapedName": "ms",
              "rawSpec": "2.0.0",
              "saveSpec": "[Circular]",
              "fetchSpec": "2.0.0"
            },
            "_requiredBy": [
              "/debug",
              "/send"
            ],
            "_resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
            "_shasum": "5608aeadfc00be6c2901df5f9861788de0d597c8",
            "_spec": "2.0.0",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "bugs": {
              "url": "https://github.com/zeit/ms/issues"
            },
            "bundleDependencies": false,
            "deprecated": false,
            "description": "Tiny milisecond conversion utility",
            "devDependencies": {
              "eslint": "3.19.0",
              "expect.js": "0.3.1",
              "husky": "0.13.3",
              "lint-staged": "3.4.1",
              "mocha": "3.4.1"
            },
            "eslintConfig": {
              "extends": "eslint:recommended",
              "env": {
                "node": true,
                "es6": true
              }
            },
            "files": [
              "index.js"
            ],
            "homepage": "https://github.com/zeit/ms#readme",
            "license": "MIT",
            "lint-staged": {
              "*.js": [
                "npm run lint",
                "prettier --single-quote --write",
                "git add"
              ]
            },
            "main": "./index",
            "name": "ms",
            "repository": {
              "type": "git",
              "url": "git+https://github.com/zeit/ms.git"
            },
            "scripts": {
              "lint": "eslint lib/* bin/*",
              "precommit": "lint-staged",
              "test": "mocha tests.js"
            },
            "version": "2.0.0",
            "readme": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Slack Channel](http://zeit-slackin.now.sh/badge.svg)](https://zeit.chat/)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n```\n\n### Convert from milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time format written-out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [node](https://nodejs.org) and in the browser.\n- If a number is supplied to `ms`, a string with a unit is returned.\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`).\n- If you pass a string with a number and a valid unit, the number of equivalent ms is returned.\n\n## Caught a bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, node will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n",
            "readmeFilename": "readme.md",
            "_args": [
              [
                "ms@2.0.0",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "dependencies": {},
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\ms",
            "error": "[Circular]",
            "extraneous": false,
            "_deduped": "node_modules\\ms"
          },
          "regexp-clone": {
            "_from": "regexp-clone@0.0.1",
            "_id": "regexp-clone@0.0.1",
            "_integrity": "sha1-p8LgmJH9vzj7sQ03b7cwA+aKxYk=",
            "_location": "/regexp-clone",
            "_phantomChildren": "[Circular]",
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "regexp-clone@0.0.1",
              "name": "regexp-clone",
              "escapedName": "regexp-clone",
              "rawSpec": "0.0.1",
              "saveSpec": "[Circular]",
              "fetchSpec": "0.0.1"
            },
            "_requiredBy": "[Circular]",
            "_resolved": "https://registry.npmjs.org/regexp-clone/-/regexp-clone-0.0.1.tgz",
            "_shasum": "a7c2e09891fdbf38fbb10d376fb73003e68ac589",
            "_spec": "0.0.1",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": "[Circular]",
            "bugs": "[Circular]",
            "bundleDependencies": false,
            "deprecated": false,
            "description": "Clone RegExps with options",
            "devDependencies": "[Circular]",
            "homepage": "https://github.com/aheckmann/regexp-clone#readme",
            "keywords": "[Circular]",
            "license": "MIT",
            "main": "index.js",
            "name": "regexp-clone",
            "repository": "[Circular]",
            "scripts": "[Circular]",
            "version": "0.0.1",
            "readme": "#regexp-clone\n==============\n\nClones RegExps with flag preservation\n\n```js\nvar regexpClone = require('regexp-clone');\n\nvar a = /somethin/g;\nconsole.log(a.global); // true\n\nvar b = regexpClone(a);\nconsole.log(b.global); // true\n```\n\n## License\n\n[MIT](https://github.com/aheckmann/regexp-clone/blob/master/LICENSE)\n",
            "readmeFilename": "README.md",
            "_args": "[Circular]",
            "dependencies": {},
            "optionalDependencies": "[Circular]",
            "_dependencies": "[Circular]",
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\regexp-clone",
            "error": "[Circular]",
            "extraneous": false
          },
          "sliced": {
            "_from": "sliced@1.0.1",
            "_id": "sliced@1.0.1",
            "_integrity": "sha1-CzpmK10Ewxd7GSa+qCsD+Dei70E=",
            "_location": "/sliced",
            "_phantomChildren": {},
            "_requested": {
              "type": "version",
              "registry": true,
              "raw": "sliced@1.0.1",
              "name": "sliced",
              "escapedName": "sliced",
              "rawSpec": "1.0.1",
              "saveSpec": "[Circular]",
              "fetchSpec": "1.0.1"
            },
            "_requiredBy": [
              "/mongoose"
            ],
            "_resolved": "https://registry.npmjs.org/sliced/-/sliced-1.0.1.tgz",
            "_shasum": "0b3a662b5d04c3177b1926bea82b03f837a2ef41",
            "_spec": "1.0.1",
            "_where": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer",
            "author": {
              "name": "Aaron Heckmann",
              "email": "aaron.heckmann+github@gmail.com"
            },
            "bugs": {
              "url": "https://github.com/aheckmann/sliced/issues"
            },
            "bundleDependencies": false,
            "dependencies": {},
            "deprecated": false,
            "description": "A faster Node.js alternative to Array.prototype.slice.call(arguments)",
            "devDependencies": {
              "benchmark": "~1.0.0",
              "mocha": "1.5.0"
            },
            "files": [
              "LICENSE",
              "README.md",
              "index.js"
            ],
            "homepage": "https://github.com/aheckmann/sliced#readme",
            "keywords": [
              "arguments",
              "slice",
              "array"
            ],
            "license": "MIT",
            "main": "index.js",
            "name": "sliced",
            "repository": {
              "type": "git",
              "url": "git://github.com/aheckmann/sliced.git"
            },
            "scripts": {
              "test": "make test"
            },
            "version": "1.0.1",
            "readme": "#sliced\n==========\n\nA faster alternative to `[].slice.call(arguments)`.\n\n[![Build Status](https://secure.travis-ci.org/aheckmann/sliced.png)](http://travis-ci.org/aheckmann/sliced)\n\nExample output from [benchmark.js](https://github.com/bestiejs/benchmark.js)\n\n    Array.prototype.slice.call x 1,401,820 ops/sec ±2.16% (90 runs sampled)\n    [].slice.call x 1,313,116 ops/sec ±2.04% (96 runs sampled)\n    cached slice.call x 10,297,910 ops/sec ±1.81% (96 runs sampled)\n    sliced x 19,906,019 ops/sec ±1.23% (89 runs sampled)\n    fastest is sliced\n\n    Array.prototype.slice.call(arguments, 1) x 1,373,238 ops/sec ±1.84% (95 runs sampled)\n    [].slice.call(arguments, 1) x 1,395,336 ops/sec ±1.36% (93 runs sampled)\n    cached slice.call(arguments, 1) x 9,926,018 ops/sec ±1.67% (92 runs sampled)\n    sliced(arguments, 1) x 20,747,990 ops/sec ±1.16% (93 runs sampled)\n    fastest is sliced(arguments, 1)\n\n    Array.prototype.slice.call(arguments, -1) x 1,319,908 ops/sec ±2.12% (91 runs sampled)\n    [].slice.call(arguments, -1) x 1,336,170 ops/sec ±1.33% (97 runs sampled)\n    cached slice.call(arguments, -1) x 10,078,718 ops/sec ±1.21% (98 runs sampled)\n    sliced(arguments, -1) x 20,471,474 ops/sec ±1.81% (92 runs sampled)\n    fastest is sliced(arguments, -1)\n\n    Array.prototype.slice.call(arguments, -2, -10) x 1,369,246 ops/sec ±1.68% (97 runs sampled)\n    [].slice.call(arguments, -2, -10) x 1,387,935 ops/sec ±1.70% (95 runs sampled)\n    cached slice.call(arguments, -2, -10) x 9,593,428 ops/sec ±1.23% (97 runs sampled)\n    sliced(arguments, -2, -10) x 23,178,931 ops/sec ±1.70% (92 runs sampled)\n    fastest is sliced(arguments, -2, -10)\n\n    Array.prototype.slice.call(arguments, -2, -1) x 1,441,300 ops/sec ±1.26% (98 runs sampled)\n    [].slice.call(arguments, -2, -1) x 1,410,326 ops/sec ±1.96% (93 runs sampled)\n    cached slice.call(arguments, -2, -1) x 9,854,419 ops/sec ±1.02% (97 runs sampled)\n    sliced(arguments, -2, -1) x 22,550,801 ops/sec ±1.86% (91 runs sampled)\n    fastest is sliced(arguments, -2, -1)\n\n_Benchmark  [source](https://github.com/aheckmann/sliced/blob/master/bench.js)._\n\n##Usage\n\n`sliced` accepts the same arguments as `Array#slice` so you can easily swap it out.\n\n```js\nfunction zing () {\n  var slow = [].slice.call(arguments, 1, 8);\n  var args = slice(arguments, 1, 8);\n\n  var slow = Array.prototype.slice.call(arguments);\n  var args = slice(arguments);\n  // etc\n}\n```\n\n## install\n\n    npm install sliced\n\n\n[LICENSE](https://github.com/aheckmann/sliced/blob/master/LICENSE)\n",
            "readmeFilename": "README.md",
            "_args": [
              [
                "sliced@1.0.1",
                "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
              ]
            ],
            "optionalDependencies": {},
            "_dependencies": {},
            "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\sliced",
            "error": "[Circular]",
            "extraneous": false
          }
        },
        "deprecated": false,
        "description": "Mongoose MongoDB ODM",
        "devDependencies": {
          "acquit": "1.0.0",
          "acquit-ignore": "0.0.3",
          "acquit-require": "0.1.1",
          "babel-loader": "7.1.4",
          "benchmark": "2.1.2",
          "bluebird": "3.5.0",
          "co": "4.6.0",
          "dox": "0.3.1",
          "eslint": "4.14.0",
          "highlight.js": "9.1.0",
          "jade": "1.11.0",
          "lodash": "4.17.5",
          "markdown": "0.5.0",
          "marked": "0.3.9",
          "mocha": "4.1.0",
          "mongodb-topology-manager": "1.0.11",
          "mongoose-long": "0.2.1",
          "node-static": "0.7.10",
          "nyc": "11.8.0",
          "power-assert": "1.4.1",
          "q": "1.5.1",
          "rimraf": "2.6.2",
          "semver": "5.5.0",
          "tbd": "0.6.4",
          "uuid": "2.0.3",
          "uuid-parse": "1.0.0",
          "validator": "5.4.0",
          "webpack": "4.12.0"
        },
        "directories": {
          "lib": "./lib/mongoose"
        },
        "engines": {
          "node": ">=4.0.0"
        },
        "eslintConfig": {
          "extends": [
            "eslint:recommended"
          ],
          "parserOptions": {
            "ecmaVersion": 2015
          },
          "env": {
            "node": true,
            "mocha": true,
            "es6": true
          },
          "rules": {
            "comma-style": "error",
            "consistent-this": [
              "error",
              "_this"
            ],
            "indent": [
              "error",
              2,
              {
                "SwitchCase": 1,
                "VariableDeclarator": 2
              }
            ],
            "keyword-spacing": "error",
            "no-console": "off",
            "no-multi-spaces": "error",
            "func-call-spacing": "error",
            "no-trailing-spaces": "error",
            "quotes": [
              "error",
              "single"
            ],
            "semi": "error",
            "space-before-blocks": "error",
            "space-before-function-paren": [
              "error",
              "never"
            ],
            "space-infix-ops": "error",
            "space-unary-ops": "error"
          }
        },
        "homepage": "http://mongoosejs.com",
        "keywords": [
          "mongodb",
          "document",
          "model",
          "schema",
          "database",
          "odm",
          "data",
          "datastore",
          "query",
          "nosql",
          "orm",
          "db"
        ],
        "license": "MIT",
        "main": "./index.js",
        "name": "mongoose",
        "repository": {
          "type": "git",
          "url": "git://github.com/Automattic/mongoose.git"
        },
        "scripts": {
          "fix-lint": "eslint . --fix",
          "lint": "eslint . --quiet",
          "release": "git pull && git push origin master --tags && npm publish",
          "release-legacy": "git pull origin 4.x && git push origin 4.x --tags && npm publish --tag legacy",
          "test": "mocha --exit test/*.test.js test/**/*.test.js",
          "test-cov": "nyc --reporter=html --reporter=text npm test"
        },
        "version": "5.1.7",
        "readme": "# Mongoose\n\nMongoose is a [MongoDB](https://www.mongodb.org/) object modeling tool designed to work in an asynchronous environment.\n\n[![Slack Status](http://slack.mongoosejs.io/badge.svg)](http://slack.mongoosejs.io)\n[![Build Status](https://api.travis-ci.org/Automattic/mongoose.svg?branch=master)](https://travis-ci.org/Automattic/mongoose)\n[![NPM version](https://badge.fury.io/js/mongoose.svg)](http://badge.fury.io/js/mongoose)\n\n[![npm](https://nodei.co/npm/mongoose.png)](https://www.npmjs.com/package/mongoose)\n\n## Documentation\n\n[mongoosejs.com](http://mongoosejs.com/)\n\n[Mongoose 5.0.0](https://github.com/Automattic/mongoose/blob/master/History.md#500--2018-01-17) was released on January 17, 2018. You can find more details on backwards breaking changes in 5.0.0 on [GitHub](https://github.com/Automattic/mongoose/blob/master/migrating_to_5.md).\n\n## Support\n\n  - [Stack Overflow](http://stackoverflow.com/questions/tagged/mongoose)\n  - [Bug Reports](https://github.com/Automattic/mongoose/issues/)\n  - [Mongoose Slack Channel](http://slack.mongoosejs.io/)\n  - [Help Forum](http://groups.google.com/group/mongoose-orm)\n  - [MongoDB Support](https://docs.mongodb.org/manual/support/)\n\n## Importing\n\n```javascript\n// Using Node.js `require()`\nconst mongoose = require('mongoose');\n\n// Using ES6 imports\nimport mongoose from 'mongoose';\n```\n\n## Plugins\n\nCheck out the [plugins search site](http://plugins.mongoosejs.io/) to see hundreds of related modules from the community. Next, learn how to write your own plugin from the [docs](http://mongoosejs.com/docs/plugins.html) or [this blog post](http://thecodebarbarian.com/2015/03/06/guide-to-mongoose-plugins).\n\n## Contributors\n\nPull requests are always welcome! Please base pull requests against the `master`\nbranch and follow the [contributing guide](https://github.com/Automattic/mongoose/blob/master/CONTRIBUTING.md).\n\nIf your pull requests makes documentation changes, please do **not**\nmodify any `.html` files. The `.html` files are compiled code, so please make\nyour changes in `docs/*.jade`, `lib/*.js`, or `test/docs/*.js`.\n\nView all 300+ [contributors](https://github.com/Automattic/mongoose/graphs/contributors).\n\n## Installation\n\nFirst install [node.js](http://nodejs.org/) and [mongodb](https://www.mongodb.org/downloads). Then:\n\n```sh\n$ npm install mongoose\n```\n\n## Overview\n\n### Connecting to MongoDB\n\nFirst, we need to define a connection. If your app uses only one database, you should use `mongoose.connect`. If you need to create additional connections, use `mongoose.createConnection`.\n\nBoth `connect` and `createConnection` take a `mongodb://` URI, or the parameters `host, database, port, options`.\n\n```js\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost/my_database');\n```\n\nOnce connected, the `open` event is fired on the `Connection` instance. If you're using `mongoose.connect`, the `Connection` is `mongoose.connection`. Otherwise, `mongoose.createConnection` return value is a `Connection`.\n\n**Note:** _If the local connection fails then try using 127.0.0.1 instead of localhost. Sometimes issues may arise when the local hostname has been changed._\n\n**Important!** Mongoose buffers all the commands until it's connected to the database. This means that you don't have to wait until it connects to MongoDB in order to define models, run queries, etc.\n\n### Defining a Model\n\nModels are defined through the `Schema` interface.\n\n```js\nconst Schema = mongoose.Schema,\n    ObjectId = Schema.ObjectId;\n\nconst BlogPost = new Schema({\n author: ObjectId,\n title: String,\n body: String,\n date: Date\n});\n```\n\nAside from defining the structure of your documents and the types of data you're storing, a Schema handles the definition of:\n\n* [Validators](http://mongoosejs.com/docs/validation.html) (async and sync)\n* [Defaults](http://mongoosejs.com/docs/api.html#schematype_SchemaType-default)\n* [Getters](http://mongoosejs.com/docs/api.html#schematype_SchemaType-get)\n* [Setters](http://mongoosejs.com/docs/api.html#schematype_SchemaType-set)\n* [Indexes](http://mongoosejs.com/docs/guide.html#indexes)\n* [Middleware](http://mongoosejs.com/docs/middleware.html)\n* [Methods](http://mongoosejs.com/docs/guide.html#methods) definition\n* [Statics](http://mongoosejs.com/docs/guide.html#statics) definition\n* [Plugins](http://mongoosejs.com/docs/plugins.html)\n* [pseudo-JOINs](http://mongoosejs.com/docs/populate.html)\n\nThe following example shows some of these features:\n\n```js\nconst Comment = new Schema({\n  name: { type: String, default: 'hahaha' },\n  age: { type: Number, min: 18, index: true },\n  bio: { type: String, match: /[a-z]/ },\n  date: { type: Date, default: Date.now },\n  buff: Buffer\n});\n\n// a setter\nComment.path('name').set(function (v) {\n  return capitalize(v);\n});\n\n// middleware\nComment.pre('save', function (next) {\n  notify(this.get('email'));\n  next();\n});\n```\n\nTake a look at the example in `examples/schema.js` for an end-to-end example of a typical setup.\n\n### Accessing a Model\n\nOnce we define a model through `mongoose.model('ModelName', mySchema)`, we can access it through the same function\n\n```js\nconst myModel = mongoose.model('ModelName');\n```\n\nOr just do it all at once\n\n```js\nconst MyModel = mongoose.model('ModelName', mySchema);\n```\n\nThe first argument is the _singular_ name of the collection your model is for. **Mongoose automatically looks for the _plural_ version of your model name.** For example, if you use\n\n```js\nconst MyModel = mongoose.model('Ticket', mySchema);\n```\n\nThen Mongoose will create the model for your __tickets__ collection, not your __ticket__ collection.\n\nOnce we have our model, we can then instantiate it, and save it:\n\n```js\nconst instance = new MyModel();\ninstance.my.key = 'hello';\ninstance.save(function (err) {\n  //\n});\n```\n\nOr we can find documents from the same collection\n\n```js\nMyModel.find({}, function (err, docs) {\n  // docs.forEach\n});\n```\n\nYou can also `findOne`, `findById`, `update`, etc. For more details check out [the docs](http://mongoosejs.com/docs/queries.html).\n\n**Important!** If you opened a separate connection using `mongoose.createConnection()` but attempt to access the model through `mongoose.model('ModelName')` it will not work as expected since it is not hooked up to an active db connection. In this case access your model through the connection you created:\n\n```js\nconst conn = mongoose.createConnection('your connection string');\nconst MyModel = conn.model('ModelName', schema);\nconst m = new MyModel;\nm.save(); // works\n```\n\nvs\n\n```js\nconst conn = mongoose.createConnection('your connection string');\nconst MyModel = mongoose.model('ModelName', schema);\nconst m = new MyModel;\nm.save(); // does not work b/c the default connection object was never connected\n```\n\n### Embedded Documents\n\nIn the first example snippet, we defined a key in the Schema that looks like:\n\n```\ncomments: [Comment]\n```\n\nWhere `Comment` is a `Schema` we created. This means that creating embedded documents is as simple as:\n\n```js\n// retrieve my model\nvar BlogPost = mongoose.model('BlogPost');\n\n// create a blog post\nvar post = new BlogPost();\n\n// create a comment\npost.comments.push({ title: 'My comment' });\n\npost.save(function (err) {\n  if (!err) console.log('Success!');\n});\n```\n\nThe same goes for removing them:\n\n```js\nBlogPost.findById(myId, function (err, post) {\n  if (!err) {\n    post.comments[0].remove();\n    post.save(function (err) {\n      // do something\n    });\n  }\n});\n```\n\nEmbedded documents enjoy all the same features as your models. Defaults, validators, middleware. Whenever an error occurs, it's bubbled to the `save()` error callback, so error handling is a snap!\n\n\n### Middleware\n\nSee the [docs](http://mongoosejs.com/docs/middleware.html) page.\n\n#### Intercepting and mutating method arguments\n\nYou can intercept method arguments via middleware.\n\nFor example, this would allow you to broadcast changes about your Documents every time someone `set`s a path in your Document to a new value:\n\n```js\nschema.pre('set', function (next, path, val, typel) {\n  // `this` is the current Document\n  this.emit('set', path, val);\n\n  // Pass control to the next pre\n  next();\n});\n```\n\nMoreover, you can mutate the incoming `method` arguments so that subsequent middleware see different values for those arguments. To do so, just pass the new values to `next`:\n\n```js\n.pre(method, function firstPre (next, methodArg1, methodArg2) {\n  // Mutate methodArg1\n  next(\"altered-\" + methodArg1.toString(), methodArg2);\n});\n\n// pre declaration is chainable\n.pre(method, function secondPre (next, methodArg1, methodArg2) {\n  console.log(methodArg1);\n  // => 'altered-originalValOfMethodArg1'\n\n  console.log(methodArg2);\n  // => 'originalValOfMethodArg2'\n\n  // Passing no arguments to `next` automatically passes along the current argument values\n  // i.e., the following `next()` is equivalent to `next(methodArg1, methodArg2)`\n  // and also equivalent to, with the example method arg\n  // values, `next('altered-originalValOfMethodArg1', 'originalValOfMethodArg2')`\n  next();\n});\n```\n\n#### Schema gotcha\n\n`type`, when used in a schema has special meaning within Mongoose. If your schema requires using `type` as a nested property you must use object notation:\n\n```js\nnew Schema({\n  broken: { type: Boolean },\n  asset: {\n    name: String,\n    type: String // uh oh, it broke. asset will be interpreted as String\n  }\n});\n\nnew Schema({\n  works: { type: Boolean },\n  asset: {\n    name: String,\n    type: { type: String } // works. asset is an object with a type property\n  }\n});\n```\n\n### Driver Access\n\nMongoose is built on top of the [official MongoDB Node.js driver](https://github.com/mongodb/node-mongodb-native). Each mongoose model keeps a reference to a [native MongoDB driver collection](http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html). The collection object can be accessed using `YourModel.collection`. However, using the collection object directly bypasses all mongoose features, including hooks, validation, etc. The one\nnotable exception that `YourModel.collection` still buffers\ncommands. As such, `YourModel.collection.find()` will **not**\nreturn a cursor.\n\n## API Docs\n\nFind the API docs [here](http://mongoosejs.com/docs/api.html), generated using [dox](https://github.com/tj/dox)\nand [acquit](https://github.com/vkarpov15/acquit).\n\n## License\n\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "readmeFilename": "README.md",
        "_args": [
          [
            "mongoose@5.1.7",
            "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer"
          ]
        ],
        "optionalDependencies": {},
        "_dependencies": {
          "async": "2.6.1",
          "bson": "~1.0.5",
          "kareem": "2.2.1",
          "lodash.get": "4.4.2",
          "mongodb": "3.0.10",
          "mongoose-legacy-pluralize": "1.0.2",
          "mpath": "0.4.1",
          "mquery": "3.0.0",
          "ms": "2.0.0",
          "regexp-clone": "0.0.1",
          "sliced": "1.0.1"
        },
        "path": "c:\\Users\\Camara\\Desktop\\node-coursera\\conFusionServer\\node_modules\\mongoose",
        "error": "[Circular]",
        "extraneous": false,
        "peerMissing": [
          {
            "requiredBy": "mongoose-currency@0.2.0",
            "requires": "mongoose@~> 4.x"
          }
        ]
      },
      "peerMissing": true
    },
    "mongoose-currency": {
      "version": "0.2.0",
      "from": "mongoose-currency@0.2.0",
      "resolved": "https://registry.npmjs.org/mongoose-currency/-/mongoose-currency-0.2.0.tgz"
    },
    "morgan": {
      "version": "1.9.1",
      "from": "morgan@~1.9.0",
      "resolved": "https://registry.npmjs.org/morgan/-/morgan-1.9.1.tgz",
      "dependencies": {
        "basic-auth": {
          "version": "2.0.1",
          "from": "basic-auth@~2.0.0",
          "resolved": "https://registry.npmjs.org/basic-auth/-/basic-auth-2.0.1.tgz",
          "dependencies": {
            "safe-buffer": {
              "version": "5.1.2",
              "from": "safe-buffer@5.1.2",
              "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz"
            }
          }
        },
        "debug": {
          "version": "2.6.9",
          "from": "debug@~2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz"
        },
        "depd": {
          "version": "1.1.2",
          "from": "depd@~1.1.2",
          "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz"
        },
        "on-finished": {
          "version": "2.3.0",
          "from": "on-finished@~2.3.0",
          "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz"
        },
        "on-headers": {
          "version": "1.0.2",
          "from": "on-headers@~1.0.1",
          "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz"
        }
      }
    },
    "passport": {
      "version": "0.4.0",
      "from": "passport",
      "resolved": "https://registry.npmjs.org/passport/-/passport-0.4.0.tgz",
      "dependencies": {
        "passport-strategy": {
          "version": "1.0.0",
          "from": "passport-strategy@1.x.x",
          "resolved": "https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz"
        },
        "pause": {
          "version": "0.0.1",
          "from": "pause@0.0.1",
          "resolved": "https://registry.npmjs.org/pause/-/pause-0.0.1.tgz"
        }
      }
    },
    "passport-jwt": {
      "version": "4.0.0",
      "from": "passport-jwt@4.0.0",
      "resolved": "https://registry.npmjs.org/passport-jwt/-/passport-jwt-4.0.0.tgz",
      "dependencies": {
        "jsonwebtoken": {
          "version": "8.3.0",
          "from": "jsonwebtoken@8.3.0",
          "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-8.3.0.tgz"
        },
        "passport-strategy": {
          "version": "1.0.0",
          "from": "passport-strategy@1.x.x",
          "resolved": "https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz"
        }
      }
    },
    "passport-local": {
      "version": "1.0.0",
      "from": "passport-local@1.0.0",
      "resolved": "https://registry.npmjs.org/passport-local/-/passport-local-1.0.0.tgz",
      "dependencies": {
        "passport-strategy": {
          "version": "1.0.0",
          "from": "passport-strategy@1.x.x",
          "resolved": "https://registry.npmjs.org/passport-strategy/-/passport-strategy-1.0.0.tgz"
        }
      }
    },
    "passport-local-mongoose": {
      "version": "5.0.1",
      "from": "passport-local-mongoose@5.0.1",
      "resolved": "https://registry.npmjs.org/passport-local-mongoose/-/passport-local-mongoose-5.0.1.tgz",
      "dependencies": {
        "generaterr": {
          "version": "1.5.0",
          "from": "generaterr@^1.5.0",
          "resolved": "https://registry.npmjs.org/generaterr/-/generaterr-1.5.0.tgz"
        },
        "passport-local": {
          "version": "1.0.0",
          "from": "passport-local@1.0.0",
          "resolved": "https://registry.npmjs.org/passport-local/-/passport-local-1.0.0.tgz"
        },
        "debug": {
          "version": "3.2.6",
          "from": "debug@^3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "dependencies": {
            "ms": {
              "version": "2.1.1",
              "from": "ms@^2.1.1",
              "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz"
            }
          }
        },
        "scmp": {
          "version": "2.0.0",
          "from": "scmp@^2.0.0",
          "resolved": "https://registry.npmjs.org/scmp/-/scmp-2.0.0.tgz"
        },
        "semver": {
          "version": "5.6.0",
          "from": "semver@^5.1.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.6.0.tgz"
        }
      }
    },
    "session-file-store": {
      "version": "1.2.0",
      "from": "session-file-store",
      "resolved": "https://registry.npmjs.org/session-file-store/-/session-file-store-1.2.0.tgz",
      "dependencies": {
        "bagpipe": {
          "version": "0.3.5",
          "from": "bagpipe@^0.3.5",
          "resolved": "https://registry.npmjs.org/bagpipe/-/bagpipe-0.3.5.tgz"
        },
        "fs-extra": {
          "version": "4.0.3",
          "from": "fs-extra@^4.0.0",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",
          "dependencies": {
            "graceful-fs": {
              "version": "4.1.15",
              "from": "graceful-fs@^4.1.2",
              "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz"
            },
            "jsonfile": {
              "version": "4.0.0",
              "from": "jsonfile@^4.0.0",
              "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
              "dependencies": {
                "graceful-fs": {
                  "version": "4.1.15",
                  "from": "graceful-fs@^4.1.2",
                  "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz"
                }
              }
            },
            "universalify": {
              "version": "0.1.2",
              "from": "universalify@^0.1.0",
              "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz"
            }
          }
        },
        "object-assign": {
          "version": "4.1.1",
          "from": "object-assign@^4.1.1",
          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz"
        },
        "retry": {
          "version": "0.10.1",
          "from": "retry@^0.10.0",
          "resolved": "https://registry.npmjs.org/retry/-/retry-0.10.1.tgz"
        },
        "write-file-atomic": {
          "version": "1.3.1",
          "from": "write-file-atomic@1.3.1",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-1.3.1.tgz",
          "dependencies": {
            "graceful-fs": {
              "version": "4.1.15",
              "from": "graceful-fs@^4.1.2",
              "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz"
            },
            "imurmurhash": {
              "version": "0.1.4",
              "from": "imurmurhash@^0.1.4",
              "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz"
            },
            "slide": {
              "version": "1.1.6",
              "from": "slide@^1.1.5",
              "resolved": "https://registry.npmjs.org/slide/-/slide-1.1.6.tgz"
            }
          }
        }
      }
    }
  }
}
